
> @austinorphan/markdown-docs-viewer@1.0.0 test:coverage
> vitest run --coverage


 RUN  v1.6.1 /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer
      Coverage enabled with v8

 ✓ tests/themes.test.ts > Themes > defaultTheme > should have all required color properties
 ✓ tests/themes.test.ts > Themes > defaultTheme > should have valid CSS color values
 ✓ tests/themes.test.ts > Themes > defaultTheme > should have all required font properties
 ✓ tests/themes.test.ts > Themes > defaultTheme > should have valid font stacks
 ✓ tests/themes.test.ts > Themes > darkTheme > should have all required color properties
 ✓ tests/themes.test.ts > Themes > darkTheme > should have different colors from default theme
 ✓ tests/themes.test.ts > Themes > darkTheme > should have dark background colors
 ✓ tests/themes.test.ts > Themes > darkTheme > should have light text colors for contrast
 ✓ tests/themes.test.ts > Themes > darkTheme > should have same font structure as default theme
 ✓ tests/themes.test.ts > Themes > Theme Validation > should have consistent structure between themes
 ✓ tests/themes.test.ts > Themes > Theme Validation > should have valid CSS units for spacing if present
 ✓ tests/themes.test.ts > Themes > Theme Validation > should have valid CSS units for radius if present
 ✓ tests/themes.test.ts > Themes > Accessibility Considerations > should have sufficient contrast between text and background
 ✓ tests/themes.test.ts > Themes > Accessibility Considerations > should not rely only on color for information
 ✓ tests/themes.test.ts > Themes > Custom Theme Creation > should be possible to extend default theme
 ✓ tests/themes.test.ts > Themes > Custom Theme Creation > should be possible to extend dark theme
 ✓ tests/themes.test.ts > Themes > Custom Theme Creation > should be possible to create completely custom theme
 ✓ tests/loader.test.ts > DocumentLoader > Constructor > should initialize with default configuration
 ✓ tests/loader.test.ts > DocumentLoader > Constructor > should initialize with custom cache size
 ✓ tests/loader.test.ts > DocumentLoader > Constructor > should initialize with custom logger
 ✓ tests/loader.test.ts > DocumentLoader > loadAll > should return all documents
 ✓ tests/loader.test.ts > DocumentLoader > loadAll > should handle errors and return empty array
 ✓ tests/loader.test.ts > DocumentLoader > loadAll > should validate source configuration
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should load document with content
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should load document from cache if available
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should handle loading promise deduplication
 × tests/loader.test.ts > DocumentLoader > loadDocument > should handle document without content or file
   → Cannot read properties of undefined (reading 'loadDocument')
 × tests/loader.test.ts > DocumentLoader > loadDocument > should check memory usage after loading
   → Cannot read properties of undefined (reading 'loadDocument')
 ✓ tests/loader.test.ts > DocumentLoader > loadFromSource > should dispatch to correct loader based on source type
 ✓ tests/loader.test.ts > DocumentLoader > loadFromSource > should throw error for content source trying to load from path
 ✓ tests/loader.test.ts > DocumentLoader > loadFromSource > should throw error for unknown source type
 × tests/loader.test.ts > DocumentLoader > loadLocal > should load local file successfully
   → Cannot read properties of undefined (reading 'loadDocument')
 × tests/loader.test.ts > DocumentLoader > loadLocal > should handle 404 error
   → Cannot read properties of undefined (reading 'loadDocument')
 × tests/loader.test.ts > DocumentLoader > loadLocal > should handle network errors
   → Cannot read properties of undefined (reading 'loadDocument')
 × tests/loader.test.ts > DocumentLoader > loadLocal > should handle other fetch errors
   → Cannot read properties of undefined (reading 'loadDocument')
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should load from URL with baseUrl
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should handle 401/403 errors
 ✓ tests/router.test.ts > Router > Constructor > should initialize with hash mode
 ✓ tests/router.test.ts > Router > Constructor > should initialize with memory mode
 ✓ tests/router.test.ts > Router > Constructor > should initialize with none mode
 ✓ tests/router.test.ts > Router > Constructor > should handle initial hash on construction
 ✓ tests/router.test.ts > Router > Constructor > should not trigger route change for empty initial hash
 × tests/router.test.ts > Router > setRoute > should set hash when in hash mode
   → expected 'new-doc' to be '#new-doc' // Object.is equality
 ✓ tests/router.test.ts > Router > setRoute > should not set hash when in memory mode
 ✓ tests/router.test.ts > Router > setRoute > should not set hash when in none mode
 × tests/router.test.ts > Router > setRoute > should update current route in all modes
   → expected 'est-doc' to be 'test-doc' // Object.is equality
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return hash value in hash mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return null for empty hash in hash mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return current route in memory mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return null when no route set in memory mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return current route in none mode
 ✓ tests/router.test.ts > Router > Hash change handling > should handle hash change events
 ✓ tests/router.test.ts > Router > Hash change handling > should not trigger route change for same hash
 ✓ tests/router.test.ts > Router > Hash change handling > should not trigger route change for empty hash
 × tests/router.test.ts > Router > Hash change handling > should track current route correctly
   → expected "spy" to be called 3 times, but got 2 times
 ✓ tests/router.test.ts > Router > destroy > should remove event listener in hash mode
 ✓ tests/router.test.ts > Router > destroy > should not remove event listener in memory mode
 ✓ tests/router.test.ts > Router > destroy > should not remove event listener in none mode
 ✓ tests/router.test.ts > Router > destroy > should stop responding to hash changes after destroy
 ✓ tests/router.test.ts > Router > Edge cases > should handle special characters in hash
 ✓ tests/router.test.ts > Router > Edge cases > should handle encoded characters in hash
 ✓ tests/router.test.ts > Router > Edge cases > should handle rapid route changes
 ✓ tests/router.test.ts > Router > Edge cases > should handle setting same route multiple times
 ✓ tests/errors.test.ts > Error Handling System > MarkdownDocsError > should create error with all properties
 ✓ tests/errors.test.ts > Error Handling System > MarkdownDocsError > should have default values
 ✓ tests/errors.test.ts > Error Handling System > MarkdownDocsError > should serialize to JSON correctly
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create container not found error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create document not found error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create network error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create GitHub API error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create GitHub rate limit error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create parse error
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should succeed on first attempt
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should retry on failure and eventually succeed
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should not retry non-retryable errors
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should respect maxAttempts configuration
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should handle non-MarkdownDocsError exceptions
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should apply exponential backoff delays
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should execute operation successfully
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should handle errors and call fallback
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should pass through MarkdownDocsError unchanged
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should work without error handler
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in development mode > should log detailed error information
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in development mode > should log debug messages in development
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in production mode > should log simplified error information
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in production mode > should not log debug messages in production
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > should use appropriate log levels for different severities
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > should log warnings and errors
 ✓ tests/errors.test.ts > Error Handling System > Error Code Coverage > should have all error codes defined
 ✓ tests/errors.test.ts > Error Handling System > Error Code Coverage > should have all error severities defined
 ✓ tests/errors.test.ts > Error Handling System > Default Retry Configuration > should have sensible defaults
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should store and retrieve values
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should return undefined for non-existent keys
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should respect capacity limits
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should update LRU order on access
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should provide cache statistics
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should clear all entries
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should delete specific entries
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should estimate memory usage
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should function as LRU cache when localStorage is available
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should attempt to save to localStorage
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should attempt to clear localStorage on clear
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should handle localStorage errors gracefully
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should index documents and enable search
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should search in titles with high priority
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should search in tags when enabled
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should respect case sensitivity option
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should limit search results
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should perform fuzzy search when enabled
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should cache search results
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should filter out stop words
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should handle empty search queries
 ✓ tests/performance.test.ts > Performance Optimizations > Debounce > should delay function execution
 ✓ tests/performance.test.ts > Performance Optimizations > Debounce > should cancel previous calls
 ✓ tests/performance.test.ts > Performance Optimizations > Throttle > should limit function calls
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should observe elements for intersection
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should execute callback when element intersects
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should not observe already loaded elements
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should unobserve elements
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should cleanup all observers
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should be a singleton
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should add and execute cleanup tasks
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should remove cleanup tasks
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should handle cleanup task errors gracefully
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should check memory usage when performance.memory is available
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should return memory stats when available
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should measure timing metrics
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should record multiple measurements
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should limit stored measurements
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should return all metrics
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should clear all metrics
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should handle non-existent metrics gracefully
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should cleanup observers
 ✓ tests/toc.test.ts > TableOfContents > Constructor > should initialize with default options
 ✓ tests/toc.test.ts > TableOfContents > Constructor > should initialize with custom options
 ✓ tests/toc.test.ts > TableOfContents > Constructor > should merge custom options with defaults
 ✓ tests/toc.test.ts > TableOfContents > generate > should return empty array when disabled
 ✓ tests/toc.test.ts > TableOfContents > generate > should generate TOC from markdown tokens
 ✓ tests/toc.test.ts > TableOfContents > generate > should respect maxDepth option
 ✓ tests/toc.test.ts > TableOfContents > generate > should handle empty content
 ✓ tests/toc.test.ts > TableOfContents > generate > should handle content with no headings
 ✓ tests/toc.test.ts > TableOfContents > generate > should fallback to manual parsing when lexer fails
 ✓ tests/toc.test.ts > TableOfContents > generate > should handle manual parsing with various heading formats
 ✓ tests/toc.test.ts > TableOfContents > generate > should generate unique IDs for headings
 × tests/toc.test.ts > TableOfContents > render > should render TOC HTML
   → expected null to be truthy
 × tests/toc.test.ts > TableOfContents > render > should render with custom position
   → expected undefined to be true // Object.is equality
 × tests/toc.test.ts > TableOfContents > render > should render sticky TOC
   → expected undefined to be true // Object.is equality
 × tests/toc.test.ts > TableOfContents > render > should render collapsible TOC
   → expected  to have a length of 1 but got +0
 × tests/toc.test.ts > TableOfContents > render > should handle empty TOC items
   → expected null to be truthy
 × tests/toc.test.ts > TableOfContents > render > should add click handlers for collapsible items
   → Cannot read properties of null (reading 'classList')
 × tests/toc.test.ts > TableOfContents > setupScrollSpy > should setup scroll spy when enabled
   → toc.setupScrollSpy is not a function
 × tests/toc.test.ts > TableOfContents > setupScrollSpy > should not setup scroll spy when disabled
   → toc.setupScrollSpy is not a function
 × tests/toc.test.ts > TableOfContents > setupScrollSpy > should handle container without TOC element
   → expected [Function] to not throw an error but 'TypeError: toc.setupScrollSpy is not …' was thrown
 × tests/toc.test.ts > TableOfContents > destroy > should clean up scroll spy
   → toc.setupScrollSpy is not a function
 × tests/toc.test.ts > TableOfContents > destroy > should handle destroy without setup
   → expected [Function] to not throw an error but 'TypeError: toc.destroy is not a funct…' was thrown
 ✓ tests/toc.test.ts > TableOfContents > getStyles > should return CSS styles
 ✓ tests/toc.test.ts > TableOfContents > generateId > should generate slug from text
 ✓ tests/toc.test.ts > TableOfContents > generateId > should handle special characters
 × tests/toc.test.ts > TableOfContents > generateId > should handle empty text
   → expected '' to be 'heading' // Object.is equality
 × tests/toc.test.ts > TableOfContents > generateId > should handle duplicate IDs
   → expected 'test' to be 'test-1' // Object.is equality
 ✓ tests/toc.test.ts > TableOfContents > Edge cases > should handle deeply nested headings
 ✓ tests/toc.test.ts > TableOfContents > Edge cases > should handle headings starting at level 2
 × tests/toc.test.ts > TableOfContents > Edge cases > should handle non-sequential heading levels
   → expected [] to have a length of 1 but got +0
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should create a viewer instance with valid config
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should throw error when container not found
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should apply default configuration
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Management > should set theme correctly
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Management > should apply theme styles to document head
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should load documents from local source
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should get document by id
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should return null for non-existent document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should get all documents
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should load specific document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should handle loading non-existent document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by title
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by content
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by tags
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should return empty results for no matches
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should be case insensitive
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should handle missing container
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should handle missing source
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply navigation defaults
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply search defaults
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply render defaults
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State Management > should have initial state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State Management > should update state when loading document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State Management > should handle errors in state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Cleanup > should clean up resources on destroy
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Event Handling > should call onDocumentLoad callback
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Event Handling > should call onError callback on errors
 ✓ tests/search.test.ts > createSearch > should create search HTML with default placeholder
 ✓ tests/search.test.ts > createSearch > should create search HTML with custom placeholder
 ✓ tests/search.test.ts > SearchManager > Constructor > should initialize with default options
 ✓ tests/search.test.ts > SearchManager > Constructor > should initialize with custom options
 ✓ tests/search.test.ts > SearchManager > Constructor > should create debounced search function
 ✓ tests/search.test.ts > SearchManager > updateIndex > should update search index with documents and content
 ✓ tests/search.test.ts > SearchManager > attachToDOM > should attach event listeners to search input
 ✓ tests/search.test.ts > SearchManager > attachToDOM > should hide search results initially
 ✓ tests/search.test.ts > SearchManager > attachToDOM > should handle missing search container
 ✓ tests/search.test.ts > SearchManager > Search input handling > should trigger search on input after 2 characters
 ✓ tests/search.test.ts > SearchManager > Search input handling > should not trigger search for single character
 ✓ tests/search.test.ts > SearchManager > Search input handling > should hide results when input is cleared
 ✓ tests/search.test.ts > SearchManager > Search input handling > should trim whitespace from query
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should navigate down through results
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should navigate up through results
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should wrap around when navigating
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should select result on Enter key
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should hide results on Escape key
 ✓ tests/search.test.ts > SearchManager > Search results rendering > should render search results
 ✓ tests/search.test.ts > SearchManager > Search results rendering > should render no results message
 × tests/search.test.ts > SearchManager > Search results rendering > should highlight search query in results
   → expected 'Test Document' to contain '<mark>Test</mark>'
 ✓ tests/search.test.ts > SearchManager > Search results rendering > should render document with all fields
 ✓ tests/search.test.ts > SearchManager > Focus and blur handling > should perform search on focus if query exists
 ✓ tests/search.test.ts > SearchManager > Focus and blur handling > should hide results on blur with delay
 ✓ tests/search.test.ts > SearchManager > Public methods > should clear search
 × tests/search.test.ts > SearchManager > Public methods > should set documents for selection
   → expected "spy" to be called with arguments: [ { id: 'doc1', title: 'Doc 1' } ]

Received: 



Number of calls: 0

 ✓ tests/search.test.ts > SearchManager > destroy > should remove event listeners
 ✓ tests/search.test.ts > SearchManager > Search options > should pass search options to index
 ✓ tests/search.test.ts > SearchManager > Search options > should use default maxResults if not specified
 ✓ tests/search.test.ts > SearchManager > Mouse interactions > should activate result on mouse enter
 ✓ tests/search.test.ts > SearchManager > Mouse interactions > should select result on click
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > DOM Structure Creation > should create proper semantic HTML structure
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > DOM Structure Creation > should render navigation with proper ARIA attributes
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > DOM Structure Creation > should create accessible mobile toggle button
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Search Interface > should render search input with proper attributes
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Search Interface > should update search results when typing
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Search Interface > should show no results for empty search
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Document Rendering > should render markdown content properly
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Document Rendering > should render code blocks with copy buttons when enabled
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Document Rendering > should handle copy button clicks
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > User Interactions > should handle navigation link clicks
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > User Interactions > should handle mobile toggle clicks
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > User Interactions > should update sidebar open state visually
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Responsive Behavior > should close mobile sidebar when window is desktop size
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Error Handling in DOM > should display error state in DOM
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Error Handling in DOM > should display loading state in DOM
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Cleanup and Memory Management > should properly clean up DOM on destroy
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Cleanup and Memory Management > should remove event listeners on destroy
 ✓ tests/advanced-features.test.ts > ExportManager > should create export manager
 ✓ tests/advanced-features.test.ts > ExportManager > should export HTML
 ✓ tests/advanced-features.test.ts > ExportManager > should handle invalid export format
 ✓ tests/advanced-features.test.ts > I18nManager > should translate messages
 ✓ tests/advanced-features.test.ts > I18nManager > should handle missing translations
 ✓ tests/advanced-features.test.ts > I18nManager > should interpolate parameters
 ✓ tests/advanced-features.test.ts > I18nManager > should switch locales
 ✓ tests/advanced-features.test.ts > I18nManager > should list available locales
 ✓ tests/advanced-features.test.ts > TableOfContents > should generate TOC from markdown
 ✓ tests/advanced-features.test.ts > TableOfContents > should generate unique IDs
 ✓ tests/advanced-features.test.ts > TableOfContents > should render TOC HTML
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should search documents
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should apply category filters
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should apply tag filters
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should generate highlights
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should get search suggestions
 ✓ tests/advanced-features.test.ts > addHeadingIds > should add IDs to headings
 ✓ tests/advanced-features.test.ts > addHeadingIds > should handle duplicate headings
 ✓ tests/advanced-features.test.ts > generatePrintStyles > should generate print CSS
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should handle rate limiting (429) 3007ms
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should include custom headers
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should load from GitHub successfully
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle invalid GitHub path format
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle GitHub API rate limiting 3009ms
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle directory response
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle missing content in response
 × tests/loader.test.ts > DocumentLoader > loadFromGithub > should use default branch when not specified
   → expected "spy" to be called with arguments: [ …(2) ]

Received: 

  1st spy call:

  Array [
-   "https://api.github.com/repos/owner/repo/contents/file.md?ref=main",
-   Any<Object>,
+   "https://api.github.com/repos/owner/repo/contents/?ref=file.md",
+   Object {
+     "headers": Object {
+       "Accept": "application/vnd.github.v3+json",
+       "User-Agent": "MarkdownDocsViewer/1.0",
+     },
+   },
  ]


Number of calls: 1

 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should clear cache
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should get cache size
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should check if document is cached
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should get cache stats
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should get performance metrics
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should update retry configuration
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should destroy and cleanup resources
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should preload documents
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should skip preloading cached documents
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should handle preload errors gracefully
 × tests/loader.test.ts > DocumentLoader > Source Validation > should validate missing source
   → Cannot read properties of null (reading 'type')
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should validate empty documents
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should warn about URL source without baseUrl
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should warn about content source with missing content
 × tests/loader.test.ts > DocumentLoader > Error Handling with Retry > should retry on retryable errors
   → expected '' to be 'Success after retry' // Object.is equality
 ✓ tests/loader.test.ts > DocumentLoader > Error Handling with Retry > should respect custom retry config

{"numTotalTestSuites":100,"numPassedTestSuites":100,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":283,"numPassedTests":255,"numFailedTests":28,"numPendingTests":0,"numTodoTests":0,"startTime":1753068770213,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should create export manager","status":"passed","title":"should create export manager","duration":2,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should export HTML","status":"passed","title":"should export HTML","duration":5,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle invalid export format","status":"passed","title":"should handle invalid export format","duration":4,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should translate messages","status":"passed","title":"should translate messages","duration":1,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should handle missing translations","status":"passed","title":"should handle missing translations","duration":0,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should interpolate parameters","status":"passed","title":"should interpolate parameters","duration":1,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should switch locales","status":"passed","title":"should switch locales","duration":0,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should list available locales","status":"passed","title":"should list available locales","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents"],"fullName":" TableOfContents should generate TOC from markdown","status":"passed","title":"should generate TOC from markdown","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents"],"fullName":" TableOfContents should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents"],"fullName":" TableOfContents should render TOC HTML","status":"passed","title":"should render TOC HTML","duration":0,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should search documents","status":"passed","title":"should search documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should apply category filters","status":"passed","title":"should apply category filters","duration":0,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should apply tag filters","status":"passed","title":"should apply tag filters","duration":1,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should generate highlights","status":"passed","title":"should generate highlights","duration":0,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should get search suggestions","status":"passed","title":"should get search suggestions","duration":0,"failureMessages":[]},{"ancestorTitles":["","addHeadingIds"],"fullName":" addHeadingIds should add IDs to headings","status":"passed","title":"should add IDs to headings","duration":6,"failureMessages":[]},{"ancestorTitles":["","addHeadingIds"],"fullName":" addHeadingIds should handle duplicate headings","status":"passed","title":"should handle duplicate headings","duration":1,"failureMessages":[]},{"ancestorTitles":["","generatePrintStyles"],"fullName":" generatePrintStyles should generate print CSS","status":"passed","title":"should generate print CSS","duration":0,"failureMessages":[]}],"startTime":1753068771578,"endTime":1753068771603,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/advanced-features.test.ts"},{"assertionResults":[{"ancestorTitles":["","DOM Integration Tests","DOM Structure Creation"],"fullName":" DOM Integration Tests DOM Structure Creation should create proper semantic HTML structure","status":"passed","title":"should create proper semantic HTML structure","duration":41,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","DOM Structure Creation"],"fullName":" DOM Integration Tests DOM Structure Creation should render navigation with proper ARIA attributes","status":"passed","title":"should render navigation with proper ARIA attributes","duration":13,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","DOM Structure Creation"],"fullName":" DOM Integration Tests DOM Structure Creation should create accessible mobile toggle button","status":"passed","title":"should create accessible mobile toggle button","duration":13,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Search Interface"],"fullName":" DOM Integration Tests Search Interface should render search input with proper attributes","status":"passed","title":"should render search input with proper attributes","duration":11,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Search Interface"],"fullName":" DOM Integration Tests Search Interface should update search results when typing","status":"passed","title":"should update search results when typing","duration":21,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Search Interface"],"fullName":" DOM Integration Tests Search Interface should show no results for empty search","status":"passed","title":"should show no results for empty search","duration":14,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Document Rendering"],"fullName":" DOM Integration Tests Document Rendering should render markdown content properly","status":"passed","title":"should render markdown content properly","duration":23,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Document Rendering"],"fullName":" DOM Integration Tests Document Rendering should render code blocks with copy buttons when enabled","status":"passed","title":"should render code blocks with copy buttons when enabled","duration":21,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Document Rendering"],"fullName":" DOM Integration Tests Document Rendering should handle copy button clicks","status":"passed","title":"should handle copy button clicks","duration":18,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","User Interactions"],"fullName":" DOM Integration Tests User Interactions should handle navigation link clicks","status":"passed","title":"should handle navigation link clicks","duration":18,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","User Interactions"],"fullName":" DOM Integration Tests User Interactions should handle mobile toggle clicks","status":"passed","title":"should handle mobile toggle clicks","duration":8,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","User Interactions"],"fullName":" DOM Integration Tests User Interactions should update sidebar open state visually","status":"passed","title":"should update sidebar open state visually","duration":8,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Responsive Behavior"],"fullName":" DOM Integration Tests Responsive Behavior should close mobile sidebar when window is desktop size","status":"passed","title":"should close mobile sidebar when window is desktop size","duration":14,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Theme Application"],"fullName":" DOM Integration Tests Theme Application should apply theme styles to DOM","status":"skipped","title":"should apply theme styles to DOM","failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Theme Application"],"fullName":" DOM Integration Tests Theme Application should update styles when theme changes","status":"skipped","title":"should update styles when theme changes","failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Error Handling in DOM"],"fullName":" DOM Integration Tests Error Handling in DOM should display error state in DOM","status":"passed","title":"should display error state in DOM","duration":10,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Error Handling in DOM"],"fullName":" DOM Integration Tests Error Handling in DOM should display loading state in DOM","status":"passed","title":"should display loading state in DOM","duration":11,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Cleanup and Memory Management"],"fullName":" DOM Integration Tests Cleanup and Memory Management should properly clean up DOM on destroy","status":"passed","title":"should properly clean up DOM on destroy","duration":6,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Cleanup and Memory Management"],"fullName":" DOM Integration Tests Cleanup and Memory Management should remove event listeners on destroy","status":"passed","title":"should remove event listeners on destroy","duration":6,"failureMessages":[]}],"startTime":1753068771192,"endTime":1753068771449,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/dom-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","Error Handling System","MarkdownDocsError"],"fullName":" Error Handling System MarkdownDocsError should create error with all properties","status":"passed","title":"should create error with all properties","duration":5,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","MarkdownDocsError"],"fullName":" Error Handling System MarkdownDocsError should have default values","status":"passed","title":"should have default values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","MarkdownDocsError"],"fullName":" Error Handling System MarkdownDocsError should serialize to JSON correctly","status":"passed","title":"should serialize to JSON correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create container not found error","status":"passed","title":"should create container not found error","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create document not found error","status":"passed","title":"should create document not found error","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create network error","status":"passed","title":"should create network error","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create GitHub API error","status":"passed","title":"should create GitHub API error","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create GitHub rate limit error","status":"passed","title":"should create GitHub rate limit error","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create parse error","status":"passed","title":"should create parse error","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should succeed on first attempt","status":"passed","title":"should succeed on first attempt","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should retry on failure and eventually succeed","status":"passed","title":"should retry on failure and eventually succeed","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should not retry non-retryable errors","status":"passed","title":"should not retry non-retryable errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should respect maxAttempts configuration","status":"passed","title":"should respect maxAttempts configuration","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should handle non-MarkdownDocsError exceptions","status":"passed","title":"should handle non-MarkdownDocsError exceptions","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should apply exponential backoff delays","status":"passed","title":"should apply exponential backoff delays","duration":3,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should execute operation successfully","status":"passed","title":"should execute operation successfully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should handle errors and call fallback","status":"passed","title":"should handle errors and call fallback","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should pass through MarkdownDocsError unchanged","status":"passed","title":"should pass through MarkdownDocsError unchanged","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should work without error handler","status":"passed","title":"should work without error handler","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in development mode"],"fullName":" Error Handling System ConsoleErrorLogger in development mode should log detailed error information","status":"passed","title":"should log detailed error information","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in development mode"],"fullName":" Error Handling System ConsoleErrorLogger in development mode should log debug messages in development","status":"passed","title":"should log debug messages in development","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in production mode"],"fullName":" Error Handling System ConsoleErrorLogger in production mode should log simplified error information","status":"passed","title":"should log simplified error information","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in production mode"],"fullName":" Error Handling System ConsoleErrorLogger in production mode should not log debug messages in production","status":"passed","title":"should not log debug messages in production","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger"],"fullName":" Error Handling System ConsoleErrorLogger should use appropriate log levels for different severities","status":"passed","title":"should use appropriate log levels for different severities","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger"],"fullName":" Error Handling System ConsoleErrorLogger should log warnings and errors","status":"passed","title":"should log warnings and errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","Error Code Coverage"],"fullName":" Error Handling System Error Code Coverage should have all error codes defined","status":"passed","title":"should have all error codes defined","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","Error Code Coverage"],"fullName":" Error Handling System Error Code Coverage should have all error severities defined","status":"passed","title":"should have all error severities defined","duration":5,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","Default Retry Configuration"],"fullName":" Error Handling System Default Retry Configuration should have sensible defaults","status":"passed","title":"should have sensible defaults","duration":0,"failureMessages":[]}],"startTime":1753068771033,"endTime":1753068771067,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/errors.test.ts"},{"assertionResults":[{"ancestorTitles":["","DocumentLoader","Constructor"],"fullName":" DocumentLoader Constructor should initialize with default configuration","status":"passed","title":"should initialize with default configuration","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Constructor"],"fullName":" DocumentLoader Constructor should initialize with custom cache size","status":"passed","title":"should initialize with custom cache size","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Constructor"],"fullName":" DocumentLoader Constructor should initialize with custom logger","status":"passed","title":"should initialize with custom logger","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadAll"],"fullName":" DocumentLoader loadAll should return all documents","status":"passed","title":"should return all documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadAll"],"fullName":" DocumentLoader loadAll should handle errors and return empty array","status":"passed","title":"should handle errors and return empty array","duration":10,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadAll"],"fullName":" DocumentLoader loadAll should validate source configuration","status":"passed","title":"should validate source configuration","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should load document with content","status":"passed","title":"should load document with content","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should load document from cache if available","status":"passed","title":"should load document from cache if available","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should handle loading promise deduplication","status":"passed","title":"should handle loading promise deduplication","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should handle document without content or file","status":"failed","title":"should handle document without content or file","duration":1,"failureMessages":["Cannot read properties of undefined (reading 'loadDocument')"],"location":{"line":215,"column":35}},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should check memory usage after loading","status":"failed","title":"should check memory usage after loading","duration":1,"failureMessages":["Cannot read properties of undefined (reading 'loadDocument')"],"location":{"line":227,"column":20}},{"ancestorTitles":["","DocumentLoader","loadFromSource"],"fullName":" DocumentLoader loadFromSource should dispatch to correct loader based on source type","status":"passed","title":"should dispatch to correct loader based on source type","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromSource"],"fullName":" DocumentLoader loadFromSource should throw error for content source trying to load from path","status":"passed","title":"should throw error for content source trying to load from path","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromSource"],"fullName":" DocumentLoader loadFromSource should throw error for unknown source type","status":"passed","title":"should throw error for unknown source type","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should load local file successfully","status":"failed","title":"should load local file successfully","duration":1,"failureMessages":["Cannot read properties of undefined (reading 'loadDocument')"],"location":{"line":292,"column":35}},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should handle 404 error","status":"failed","title":"should handle 404 error","duration":0,"failureMessages":["Cannot read properties of undefined (reading 'loadDocument')"],"location":{"line":305,"column":35}},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should handle network errors","status":"failed","title":"should handle network errors","duration":0,"failureMessages":["Cannot read properties of undefined (reading 'loadDocument')"],"location":{"line":314,"column":35}},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should handle other fetch errors","status":"failed","title":"should handle other fetch errors","duration":1,"failureMessages":["Cannot read properties of undefined (reading 'loadDocument')"],"location":{"line":323,"column":35}},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should load from URL with baseUrl","status":"passed","title":"should load from URL with baseUrl","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should handle 401/403 errors","status":"passed","title":"should handle 401/403 errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should handle rate limiting (429)","status":"passed","title":"should handle rate limiting (429)","duration":3007,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should include custom headers","status":"passed","title":"should include custom headers","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should load from GitHub successfully","status":"passed","title":"should load from GitHub successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle invalid GitHub path format","status":"passed","title":"should handle invalid GitHub path format","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle GitHub API rate limiting","status":"passed","title":"should handle GitHub API rate limiting","duration":3009,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle directory response","status":"passed","title":"should handle directory response","duration":3,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle missing content in response","status":"passed","title":"should handle missing content in response","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should use default branch when not specified","status":"failed","title":"should use default branch when not specified","duration":7,"failureMessages":["expected \"spy\" to be called with arguments: [ …(2) ]\n\nReceived: \n\n  1st spy call:\n\n  Array [\n-   \"https://api.github.com/repos/owner/repo/contents/file.md?ref=main\",\n-   Any<Object>,\n+   \"https://api.github.com/repos/owner/repo/contents/?ref=file.md\",\n+   Object {\n+     \"headers\": Object {\n+       \"Accept\": \"application/vnd.github.v3+json\",\n+       \"User-Agent\": \"MarkdownDocsViewer/1.0\",\n+     },\n+   },\n  ]\n\n\nNumber of calls: 1\n"],"location":{"line":512,"column":25}},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should clear cache","status":"passed","title":"should clear cache","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should get cache size","status":"passed","title":"should get cache size","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should check if document is cached","status":"passed","title":"should check if document is cached","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should get cache stats","status":"passed","title":"should get cache stats","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should get performance metrics","status":"passed","title":"should get performance metrics","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should update retry configuration","status":"passed","title":"should update retry configuration","duration":4,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should destroy and cleanup resources","status":"passed","title":"should destroy and cleanup resources","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should preload documents","status":"passed","title":"should preload documents","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should skip preloading cached documents","status":"passed","title":"should skip preloading cached documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should handle preload errors gracefully","status":"passed","title":"should handle preload errors gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should validate missing source","status":"failed","title":"should validate missing source","duration":1,"failureMessages":["Cannot read properties of null (reading 'type')"],"location":{"line":36,"column":74}},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should validate empty documents","status":"passed","title":"should validate empty documents","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should warn about URL source without baseUrl","status":"passed","title":"should warn about URL source without baseUrl","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should warn about content source with missing content","status":"passed","title":"should warn about content source with missing content","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Error Handling with Retry"],"fullName":" DocumentLoader Error Handling with Retry should retry on retryable errors","status":"failed","title":"should retry on retryable errors","duration":3,"failureMessages":["expected '' to be 'Success after retry' // Object.is equality"],"location":{"line":725,"column":22}},{"ancestorTitles":["","DocumentLoader","Error Handling with Retry"],"fullName":" DocumentLoader Error Handling with Retry should respect custom retry config","status":"passed","title":"should respect custom retry config","duration":2,"failureMessages":[]}],"startTime":1753068771049,"endTime":1753068777136,"status":"failed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/loader.test.ts"},{"assertionResults":[{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should store and retrieve values","status":"passed","title":"should store and retrieve values","duration":2,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should return undefined for non-existent keys","status":"passed","title":"should return undefined for non-existent keys","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should respect capacity limits","status":"passed","title":"should respect capacity limits","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should update LRU order on access","status":"passed","title":"should update LRU order on access","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should provide cache statistics","status":"passed","title":"should provide cache statistics","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should clear all entries","status":"passed","title":"should clear all entries","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should delete specific entries","status":"passed","title":"should delete specific entries","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should estimate memory usage","status":"passed","title":"should estimate memory usage","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should function as LRU cache when localStorage is available","status":"passed","title":"should function as LRU cache when localStorage is available","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should attempt to save to localStorage","status":"passed","title":"should attempt to save to localStorage","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should attempt to clear localStorage on clear","status":"passed","title":"should attempt to clear localStorage on clear","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should handle localStorage errors gracefully","status":"passed","title":"should handle localStorage errors gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should index documents and enable search","status":"passed","title":"should index documents and enable search","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should search in titles with high priority","status":"passed","title":"should search in titles with high priority","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should search in tags when enabled","status":"passed","title":"should search in tags when enabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should respect case sensitivity option","status":"passed","title":"should respect case sensitivity option","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should limit search results","status":"passed","title":"should limit search results","duration":3,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should perform fuzzy search when enabled","status":"passed","title":"should perform fuzzy search when enabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should cache search results","status":"passed","title":"should cache search results","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should filter out stop words","status":"passed","title":"should filter out stop words","duration":2,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should handle empty search queries","status":"passed","title":"should handle empty search queries","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","Debounce"],"fullName":" Performance Optimizations Debounce should delay function execution","status":"passed","title":"should delay function execution","duration":2,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","Debounce"],"fullName":" Performance Optimizations Debounce should cancel previous calls","status":"passed","title":"should cancel previous calls","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","Throttle"],"fullName":" Performance Optimizations Throttle should limit function calls","status":"passed","title":"should limit function calls","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should observe elements for intersection","status":"passed","title":"should observe elements for intersection","duration":2,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should execute callback when element intersects","status":"passed","title":"should execute callback when element intersects","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should not observe already loaded elements","status":"passed","title":"should not observe already loaded elements","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should unobserve elements","status":"passed","title":"should unobserve elements","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should cleanup all observers","status":"passed","title":"should cleanup all observers","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should be a singleton","status":"passed","title":"should be a singleton","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should add and execute cleanup tasks","status":"passed","title":"should add and execute cleanup tasks","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should remove cleanup tasks","status":"passed","title":"should remove cleanup tasks","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should handle cleanup task errors gracefully","status":"passed","title":"should handle cleanup task errors gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should check memory usage when performance.memory is available","status":"passed","title":"should check memory usage when performance.memory is available","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should return memory stats when available","status":"passed","title":"should return memory stats when available","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should measure timing metrics","status":"passed","title":"should measure timing metrics","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should record multiple measurements","status":"passed","title":"should record multiple measurements","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should limit stored measurements","status":"passed","title":"should limit stored measurements","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should return all metrics","status":"passed","title":"should return all metrics","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should clear all metrics","status":"passed","title":"should clear all metrics","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should handle non-existent metrics gracefully","status":"passed","title":"should handle non-existent metrics gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should cleanup observers","status":"passed","title":"should cleanup observers","duration":1,"failureMessages":[]}],"startTime":1753068771047,"endTime":1753068771083,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/performance.test.ts"},{"assertionResults":[{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should initialize with hash mode","status":"passed","title":"should initialize with hash mode","duration":4,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should initialize with memory mode","status":"passed","title":"should initialize with memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should initialize with none mode","status":"passed","title":"should initialize with none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should handle initial hash on construction","status":"passed","title":"should handle initial hash on construction","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should not trigger route change for empty initial hash","status":"passed","title":"should not trigger route change for empty initial hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should set hash when in hash mode","status":"failed","title":"should set hash when in hash mode","duration":4,"failureMessages":["expected 'new-doc' to be '#new-doc' // Object.is equality"],"location":{"line":71,"column":36}},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should not set hash when in memory mode","status":"passed","title":"should not set hash when in memory mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should not set hash when in none mode","status":"passed","title":"should not set hash when in none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should update current route in all modes","status":"failed","title":"should update current route in all modes","duration":1,"failureMessages":["expected 'est-doc' to be 'test-doc' // Object.is equality"],"location":{"line":100,"column":42}},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return hash value in hash mode","status":"passed","title":"should return hash value in hash mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return null for empty hash in hash mode","status":"passed","title":"should return null for empty hash in hash mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return current route in memory mode","status":"passed","title":"should return current route in memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return null when no route set in memory mode","status":"passed","title":"should return null when no route set in memory mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return current route in none mode","status":"passed","title":"should return current route in none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should handle hash change events","status":"passed","title":"should handle hash change events","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should not trigger route change for same hash","status":"passed","title":"should not trigger route change for same hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should not trigger route change for empty hash","status":"passed","title":"should not trigger route change for empty hash","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should track current route correctly","status":"failed","title":"should track current route correctly","duration":0,"failureMessages":["expected \"spy\" to be called 3 times, but got 2 times"],"location":{"line":195,"column":29}},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should remove event listener in hash mode","status":"passed","title":"should remove event listener in hash mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should not remove event listener in memory mode","status":"passed","title":"should not remove event listener in memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should not remove event listener in none mode","status":"passed","title":"should not remove event listener in none mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should stop responding to hash changes after destroy","status":"passed","title":"should stop responding to hash changes after destroy","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle special characters in hash","status":"passed","title":"should handle special characters in hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle encoded characters in hash","status":"passed","title":"should handle encoded characters in hash","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle rapid route changes","status":"passed","title":"should handle rapid route changes","duration":2,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle setting same route multiple times","status":"passed","title":"should handle setting same route multiple times","duration":0,"failureMessages":[]}],"startTime":1753068771038,"endTime":1753068771057,"status":"failed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/router.test.ts"},{"assertionResults":[{"ancestorTitles":["","createSearch"],"fullName":" createSearch should create search HTML with default placeholder","status":"passed","title":"should create search HTML with default placeholder","duration":2,"failureMessages":[]},{"ancestorTitles":["","createSearch"],"fullName":" createSearch should create search HTML with custom placeholder","status":"passed","title":"should create search HTML with custom placeholder","duration":0,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Constructor"],"fullName":" SearchManager Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":6,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Constructor"],"fullName":" SearchManager Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":1,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Constructor"],"fullName":" SearchManager Constructor should create debounced search function","status":"passed","title":"should create debounced search function","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","updateIndex"],"fullName":" SearchManager updateIndex should update search index with documents and content","status":"passed","title":"should update search index with documents and content","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","attachToDOM"],"fullName":" SearchManager attachToDOM should attach event listeners to search input","status":"passed","title":"should attach event listeners to search input","duration":7,"failureMessages":[]},{"ancestorTitles":["","SearchManager","attachToDOM"],"fullName":" SearchManager attachToDOM should hide search results initially","status":"passed","title":"should hide search results initially","duration":1,"failureMessages":[]},{"ancestorTitles":["","SearchManager","attachToDOM"],"fullName":" SearchManager attachToDOM should handle missing search container","status":"passed","title":"should handle missing search container","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should trigger search on input after 2 characters","status":"passed","title":"should trigger search on input after 2 characters","duration":6,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should not trigger search for single character","status":"passed","title":"should not trigger search for single character","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should hide results when input is cleared","status":"passed","title":"should hide results when input is cleared","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should trim whitespace from query","status":"passed","title":"should trim whitespace from query","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should navigate down through results","status":"passed","title":"should navigate down through results","duration":5,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should navigate up through results","status":"passed","title":"should navigate up through results","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should wrap around when navigating","status":"passed","title":"should wrap around when navigating","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should select result on Enter key","status":"passed","title":"should select result on Enter key","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should hide results on Escape key","status":"passed","title":"should hide results on Escape key","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should render search results","status":"passed","title":"should render search results","duration":7,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should render no results message","status":"passed","title":"should render no results message","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should highlight search query in results","status":"failed","title":"should highlight search query in results","duration":8,"failureMessages":["expected 'Test Document' to contain '<mark>Test</mark>'"],"location":{"line":319,"column":38}},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should render document with all fields","status":"passed","title":"should render document with all fields","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Focus and blur handling"],"fullName":" SearchManager Focus and blur handling should perform search on focus if query exists","status":"passed","title":"should perform search on focus if query exists","duration":4,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Focus and blur handling"],"fullName":" SearchManager Focus and blur handling should hide results on blur with delay","status":"passed","title":"should hide results on blur with delay","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Public methods"],"fullName":" SearchManager Public methods should clear search","status":"passed","title":"should clear search","duration":1,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Public methods"],"fullName":" SearchManager Public methods should set documents for selection","status":"failed","title":"should set documents for selection","duration":3,"failureMessages":["expected \"spy\" to be called with arguments: [ { id: 'doc1', title: 'Doc 1' } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n"],"location":{"line":419,"column":32}},{"ancestorTitles":["","SearchManager","destroy"],"fullName":" SearchManager destroy should remove event listeners","status":"passed","title":"should remove event listeners","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search options"],"fullName":" SearchManager Search options should pass search options to index","status":"passed","title":"should pass search options to index","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search options"],"fullName":" SearchManager Search options should use default maxResults if not specified","status":"passed","title":"should use default maxResults if not specified","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Mouse interactions"],"fullName":" SearchManager Mouse interactions should activate result on mouse enter","status":"passed","title":"should activate result on mouse enter","duration":5,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Mouse interactions"],"fullName":" SearchManager Mouse interactions should select result on click","status":"passed","title":"should select result on click","duration":3,"failureMessages":[]}],"startTime":1753068771048,"endTime":1753068771148,"status":"failed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/search.test.ts"},{"assertionResults":[{"ancestorTitles":["","Themes","defaultTheme"],"fullName":" Themes defaultTheme should have all required color properties","status":"passed","title":"should have all required color properties","duration":2,"failureMessages":[]},{"ancestorTitles":["","Themes","defaultTheme"],"fullName":" Themes defaultTheme should have valid CSS color values","status":"passed","title":"should have valid CSS color values","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","defaultTheme"],"fullName":" Themes defaultTheme should have all required font properties","status":"passed","title":"should have all required font properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","defaultTheme"],"fullName":" Themes defaultTheme should have valid font stacks","status":"passed","title":"should have valid font stacks","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","darkTheme"],"fullName":" Themes darkTheme should have all required color properties","status":"passed","title":"should have all required color properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","darkTheme"],"fullName":" Themes darkTheme should have different colors from default theme","status":"passed","title":"should have different colors from default theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","darkTheme"],"fullName":" Themes darkTheme should have dark background colors","status":"passed","title":"should have dark background colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","darkTheme"],"fullName":" Themes darkTheme should have light text colors for contrast","status":"passed","title":"should have light text colors for contrast","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","darkTheme"],"fullName":" Themes darkTheme should have same font structure as default theme","status":"passed","title":"should have same font structure as default theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Theme Validation"],"fullName":" Themes Theme Validation should have consistent structure between themes","status":"passed","title":"should have consistent structure between themes","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Theme Validation"],"fullName":" Themes Theme Validation should have valid CSS units for spacing if present","status":"passed","title":"should have valid CSS units for spacing if present","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","Theme Validation"],"fullName":" Themes Theme Validation should have valid CSS units for radius if present","status":"passed","title":"should have valid CSS units for radius if present","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Accessibility Considerations"],"fullName":" Themes Accessibility Considerations should have sufficient contrast between text and background","status":"passed","title":"should have sufficient contrast between text and background","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Accessibility Considerations"],"fullName":" Themes Accessibility Considerations should not rely only on color for information","status":"passed","title":"should not rely only on color for information","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Custom Theme Creation"],"fullName":" Themes Custom Theme Creation should be possible to extend default theme","status":"passed","title":"should be possible to extend default theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Custom Theme Creation"],"fullName":" Themes Custom Theme Creation should be possible to extend dark theme","status":"passed","title":"should be possible to extend dark theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Custom Theme Creation"],"fullName":" Themes Custom Theme Creation should be possible to create completely custom theme","status":"passed","title":"should be possible to create completely custom theme","duration":0,"failureMessages":[]}],"startTime":1753068771046,"endTime":1753068771053,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/themes.test.ts"},{"assertionResults":[{"ancestorTitles":["","TableOfContents","Constructor"],"fullName":" TableOfContents Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":2,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Constructor"],"fullName":" TableOfContents Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Constructor"],"fullName":" TableOfContents Constructor should merge custom options with defaults","status":"passed","title":"should merge custom options with defaults","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should return empty array when disabled","status":"passed","title":"should return empty array when disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should generate TOC from markdown tokens","status":"passed","title":"should generate TOC from markdown tokens","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should respect maxDepth option","status":"passed","title":"should respect maxDepth option","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should handle empty content","status":"passed","title":"should handle empty content","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should handle content with no headings","status":"passed","title":"should handle content with no headings","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should fallback to manual parsing when lexer fails","status":"passed","title":"should fallback to manual parsing when lexer fails","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should handle manual parsing with various heading formats","status":"passed","title":"should handle manual parsing with various heading formats","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should generate unique IDs for headings","status":"passed","title":"should generate unique IDs for headings","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render TOC HTML","status":"failed","title":"should render TOC HTML","duration":12,"failureMessages":["expected null to be truthy"],"location":{"line":206,"column":26}},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render with custom position","status":"failed","title":"should render with custom position","duration":3,"failureMessages":["expected undefined to be true // Object.is equality"],"location":{"line":225,"column":62}},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render sticky TOC","status":"failed","title":"should render sticky TOC","duration":1,"failureMessages":["expected undefined to be true // Object.is equality"],"location":{"line":238,"column":64}},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render collapsible TOC","status":"failed","title":"should render collapsible TOC","duration":8,"failureMessages":["expected  to have a length of 1 but got +0"],"location":{"line":258,"column":23}},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should handle empty TOC items","status":"failed","title":"should handle empty TOC items","duration":1,"failureMessages":["expected null to be truthy"],"location":{"line":267,"column":26}},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should add click handlers for collapsible items","status":"failed","title":"should add click handlers for collapsible items","duration":1,"failureMessages":["Cannot read properties of null (reading 'classList')"],"location":{"line":291,"column":20}},{"ancestorTitles":["","TableOfContents","setupScrollSpy"],"fullName":" TableOfContents setupScrollSpy should setup scroll spy when enabled","status":"failed","title":"should setup scroll spy when enabled","duration":4,"failureMessages":["toc.setupScrollSpy is not a function"],"location":{"line":328,"column":11}},{"ancestorTitles":["","TableOfContents","setupScrollSpy"],"fullName":" TableOfContents setupScrollSpy should not setup scroll spy when disabled","status":"failed","title":"should not setup scroll spy when disabled","duration":3,"failureMessages":["toc.setupScrollSpy is not a function"],"location":{"line":339,"column":11}},{"ancestorTitles":["","TableOfContents","setupScrollSpy"],"fullName":" TableOfContents setupScrollSpy should handle container without TOC element","status":"failed","title":"should handle container without TOC element","duration":3,"failureMessages":["expected [Function] to not throw an error but 'TypeError: toc.setupScrollSpy is not …' was thrown"],"location":{"line":349,"column":55}},{"ancestorTitles":["","TableOfContents","destroy"],"fullName":" TableOfContents destroy should clean up scroll spy","status":"failed","title":"should clean up scroll spy","duration":1,"failureMessages":["toc.setupScrollSpy is not a function"],"location":{"line":361,"column":11}},{"ancestorTitles":["","TableOfContents","destroy"],"fullName":" TableOfContents destroy should handle destroy without setup","status":"failed","title":"should handle destroy without setup","duration":0,"failureMessages":["expected [Function] to not throw an error but 'TypeError: toc.destroy is not a funct…' was thrown"],"location":{"line":373,"column":39}},{"ancestorTitles":["","TableOfContents","getStyles"],"fullName":" TableOfContents getStyles should return CSS styles","status":"passed","title":"should return CSS styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId"],"fullName":" TableOfContents generateId should generate slug from text","status":"passed","title":"should generate slug from text","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId"],"fullName":" TableOfContents generateId should handle special characters","status":"passed","title":"should handle special characters","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId"],"fullName":" TableOfContents generateId should handle empty text","status":"failed","title":"should handle empty text","duration":1,"failureMessages":["expected '' to be 'heading' // Object.is equality"],"location":{"line":409,"column":18}},{"ancestorTitles":["","TableOfContents","generateId"],"fullName":" TableOfContents generateId should handle duplicate IDs","status":"failed","title":"should handle duplicate IDs","duration":0,"failureMessages":["expected 'test' to be 'test-1' // Object.is equality"],"location":{"line":418,"column":19}},{"ancestorTitles":["","TableOfContents","Edge cases"],"fullName":" TableOfContents Edge cases should handle deeply nested headings","status":"passed","title":"should handle deeply nested headings","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Edge cases"],"fullName":" TableOfContents Edge cases should handle headings starting at level 2","status":"passed","title":"should handle headings starting at level 2","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Edge cases"],"fullName":" TableOfContents Edge cases should handle non-sequential heading levels","status":"failed","title":"should handle non-sequential heading levels","duration":1,"failureMessages":["expected [] to have a length of 1 but got +0"],"location":{"line":474,"column":46}}],"startTime":1753068771048,"endTime":1753068771095,"status":"failed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/toc.test.ts"},{"assertionResults":[{"ancestorTitles":["","MarkdownDocsViewer","Constructor"],"fullName":" MarkdownDocsViewer Constructor should create a viewer instance with valid config","status":"passed","title":"should create a viewer instance with valid config","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Constructor"],"fullName":" MarkdownDocsViewer Constructor should throw error when container not found","status":"passed","title":"should throw error when container not found","duration":11,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Constructor"],"fullName":" MarkdownDocsViewer Constructor should apply default configuration","status":"passed","title":"should apply default configuration","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Management"],"fullName":" MarkdownDocsViewer Theme Management should set theme correctly","status":"passed","title":"should set theme correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Management"],"fullName":" MarkdownDocsViewer Theme Management should apply theme styles to document head","status":"passed","title":"should apply theme styles to document head","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should load documents from local source","status":"passed","title":"should load documents from local source","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should get document by id","status":"passed","title":"should get document by id","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should return null for non-existent document","status":"passed","title":"should return null for non-existent document","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should get all documents","status":"passed","title":"should get all documents","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should load specific document","status":"passed","title":"should load specific document","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should handle loading non-existent document","status":"passed","title":"should handle loading non-existent document","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should search by title","status":"passed","title":"should search by title","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should search by content","status":"passed","title":"should search by content","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should search by tags","status":"passed","title":"should search by tags","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should return empty results for no matches","status":"passed","title":"should return empty results for no matches","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should be case insensitive","status":"passed","title":"should be case insensitive","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should handle missing container","status":"passed","title":"should handle missing container","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should handle missing source","status":"passed","title":"should handle missing source","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should apply navigation defaults","status":"passed","title":"should apply navigation defaults","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should apply search defaults","status":"passed","title":"should apply search defaults","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should apply render defaults","status":"passed","title":"should apply render defaults","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State Management"],"fullName":" MarkdownDocsViewer State Management should have initial state","status":"passed","title":"should have initial state","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State Management"],"fullName":" MarkdownDocsViewer State Management should update state when loading document","status":"passed","title":"should update state when loading document","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State Management"],"fullName":" MarkdownDocsViewer State Management should handle errors in state","status":"passed","title":"should handle errors in state","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Cleanup"],"fullName":" MarkdownDocsViewer Cleanup should clean up resources on destroy","status":"passed","title":"should clean up resources on destroy","duration":8,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Event Handling"],"fullName":" MarkdownDocsViewer Event Handling should call onDocumentLoad callback","status":"passed","title":"should call onDocumentLoad callback","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Event Handling"],"fullName":" MarkdownDocsViewer Event Handling should call onError callback on errors","status":"passed","title":"should call onError callback on errors","duration":0,"failureMessages":[]}],"startTime":1753068771087,"endTime":1753068771121,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts"}]}
⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 2 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
 Test Files  4 failed | 6 passed (10)
      Tests  28 failed | 253 passed | 2 skipped (283)
     Errors  2 errors
   Start at  22:32:50
   Duration  6.97s (transform 638ms, setup 953ms, collect 1.25s, tests 6.65s, environment 3.57s, prepare 1.18s)

