
> markdown-docs-viewer@0.1.0 test
> vitest run


 RUN  v1.6.0 /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer

 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should store and retrieve values
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should return undefined for non-existent keys
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should respect capacity limits
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should update LRU order on access
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should provide cache statistics
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should clear all entries
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should delete specific entries
 ✓ tests/performance.test.ts > Performance Optimizations > LRUCache > should estimate memory usage
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should function as LRU cache when localStorage is available
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should attempt to save to localStorage
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should attempt to clear localStorage on clear
 ✓ tests/performance.test.ts > Performance Optimizations > PersistentCache > should handle localStorage errors gracefully
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should index documents and enable search
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should search in titles with high priority
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should search in tags when enabled
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should respect case sensitivity option
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should limit search results
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should perform fuzzy search when enabled
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should cache search results
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should filter out stop words
 ✓ tests/performance.test.ts > Performance Optimizations > SearchIndex > should handle empty search queries
stderr | tests/loader.test.ts > DocumentLoader > loadAll > should handle errors and return empty array
[INVALID_SOURCE] No documents are configured to load.
MarkdownDocsViewer Warning: Failed to load documents, returning empty array undefined

stderr | tests/loader.test.ts > DocumentLoader > loadAll > should validate source configuration
[INVALID_SOURCE] No documents are configured to load.
MarkdownDocsViewer Warning: Failed to load documents, returning empty array undefined

stderr | tests/loader.test.ts > DocumentLoader > loadDocument > should handle document without content or file
[DOCUMENT_NOT_FOUND] The requested document could not be found.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadFromSource > should throw error for content source trying to load from path
[DOCUMENT_LOAD_FAILED] Internal error: Content source attempted to load from file path.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadFromSource > should throw error for unknown source type
[INVALID_SOURCE] Unsupported document source type.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadLocal > should handle 404 error
[DOCUMENT_NOT_FOUND] The requested document could not be found.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

 ✓ tests/performance.test.ts > Performance Optimizations > Debounce > should delay function execution
 ✓ tests/loader.test.ts > DocumentLoader > Constructor > should initialize with default configuration
 ✓ tests/loader.test.ts > DocumentLoader > Constructor > should initialize with custom cache size
 ✓ tests/loader.test.ts > DocumentLoader > Constructor > should initialize with custom logger
 ✓ tests/loader.test.ts > DocumentLoader > loadAll > should return all documents
 ✓ tests/loader.test.ts > DocumentLoader > loadAll > should handle errors and return empty array
 ✓ tests/loader.test.ts > DocumentLoader > loadAll > should validate source configuration
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should load document with content
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should load document from cache if available
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should handle loading promise deduplication
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should handle document without content or file
 ✓ tests/loader.test.ts > DocumentLoader > loadDocument > should check memory usage after loading
 ✓ tests/loader.test.ts > DocumentLoader > loadFromSource > should dispatch to correct loader based on source type
 ✓ tests/loader.test.ts > DocumentLoader > loadFromSource > should throw error for content source trying to load from path
 ✓ tests/loader.test.ts > DocumentLoader > loadFromSource > should throw error for unknown source type
 ✓ tests/loader.test.ts > DocumentLoader > loadLocal > should load local file successfully
 ✓ tests/loader.test.ts > DocumentLoader > loadLocal > should handle 404 error
 ✓ tests/search.test.ts > createSearch > should create search HTML with default placeholder
 ✓ tests/search.test.ts > createSearch > should create search HTML with custom placeholder
 ✓ tests/search.test.ts > SearchManager > Constructor > should initialize with default options
 ✓ tests/search.test.ts > SearchManager > Constructor > should initialize with custom options
 ✓ tests/search.test.ts > SearchManager > Constructor > should create debounced search function
 ✓ tests/search.test.ts > SearchManager > updateIndex > should update search index with documents and content
 ✓ tests/search.test.ts > SearchManager > attachToDOM > should attach event listeners to search input
 ✓ tests/search.test.ts > SearchManager > attachToDOM > should hide search results initially
 ✓ tests/search.test.ts > SearchManager > attachToDOM > should handle missing search container
 ✓ tests/performance.test.ts > Performance Optimizations > Debounce > should cancel previous calls
 ✓ tests/search.test.ts > SearchManager > Search input handling > should trigger search on input after 2 characters
 ✓ tests/performance.test.ts > Performance Optimizations > Throttle > should limit function calls
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should observe elements for intersection
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should execute callback when element intersects
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should not observe already loaded elements
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should unobserve elements
 ✓ tests/performance.test.ts > Performance Optimizations > LazyLoader > should cleanup all observers
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should be a singleton
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should add and execute cleanup tasks
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should remove cleanup tasks
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should handle cleanup task errors gracefully
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should check memory usage when performance.memory is available
 ✓ tests/performance.test.ts > Performance Optimizations > MemoryManager > should return memory stats when available
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should measure timing metrics
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should record multiple measurements
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should limit stored measurements
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should return all metrics
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should clear all metrics
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should handle non-existent metrics gracefully
 ✓ tests/performance.test.ts > Performance Optimizations > PerformanceMonitor > should cleanup observers
 ✓ tests/search.test.ts > SearchManager > Search input handling > should not trigger search for single character
 ✓ tests/search.test.ts > SearchManager > Search input handling > should hide results when input is cleared
 ✓ tests/theme-manager.test.ts > ThemeManager > Constructor > should initialize with default options
 ✓ tests/theme-manager.test.ts > ThemeManager > Constructor > should initialize with custom options
 ✓ tests/theme-manager.test.ts > ThemeManager > Constructor > should load saved theme from localStorage
 ✓ tests/theme-manager.test.ts > ThemeManager > Constructor > should fall back to default theme if saved theme not found
 ✓ tests/theme-manager.test.ts > ThemeManager > Constructor > should use custom storage key
 ✓ tests/theme-manager.test.ts > ThemeManager > Built-in themes > should have all expected built-in themes
 ✓ tests/theme-manager.test.ts > ThemeManager > Built-in themes > should have proper theme structure for all built-in themes
 ✓ tests/theme-manager.test.ts > ThemeManager > registerTheme > should register a custom theme
 ✓ tests/theme-manager.test.ts > ThemeManager > registerTheme > should allow overriding existing themes
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should set theme and return the theme object
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should return null for non-existent theme
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should save theme to localStorage when persistence enabled
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should not save theme when persistence disabled
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should call onThemeChange callback
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should apply CSS variables
 ✓ tests/theme-manager.test.ts > ThemeManager > setTheme > should handle localStorage errors gracefully
 ✓ tests/theme-manager.test.ts > ThemeManager > getCurrentTheme > should return current theme
 ✓ tests/theme-manager.test.ts > ThemeManager > getAvailableThemes > should return all registered themes
 ✓ tests/theme-manager.test.ts > ThemeManager > getAvailableThemes > should include custom themes
 ✓ tests/theme-manager.test.ts > ThemeManager > getTheme > should return theme by name
 ✓ tests/theme-manager.test.ts > ThemeManager > getTheme > should return undefined for non-existent theme
 ✓ tests/theme-manager.test.ts > ThemeManager > createCustomTheme > should create custom theme based on current theme
 ✓ tests/theme-manager.test.ts > ThemeManager > createCustomTheme > should merge all properties correctly
 ✓ tests/theme-manager.test.ts > ThemeManager > createCustomTheme > should register the custom theme
 ✓ tests/theme-manager.test.ts > ThemeManager > applyCSSVariables > should apply all color variables
 ✓ tests/theme-manager.test.ts > ThemeManager > applyCSSVariables > should apply RGB versions of colors
 ✓ tests/theme-manager.test.ts > ThemeManager > applyCSSVariables > should apply font variables
 ✓ tests/theme-manager.test.ts > ThemeManager > applyCSSVariables > should apply spacing variables
 ✓ tests/theme-manager.test.ts > ThemeManager > applyCSSVariables > should apply border radius
 ✓ tests/theme-manager.test.ts > ThemeManager > applyCSSVariables > should set theme data attribute
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > getContrastRatio > should calculate contrast ratio correctly
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > getContrastRatio > should handle same colors
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > getContrastRatio > should be symmetric
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > isAccessible > should return true for high contrast combinations (AA)
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > isAccessible > should return false for low contrast combinations (AA)
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > isAccessible > should use AA standard by default
 ✓ tests/theme-manager.test.ts > ThemeManager > Color utility methods > isAccessible > should apply AAA standard correctly
 ✓ tests/theme-manager.test.ts > ThemeManager > Theme import/export > exportTheme > should export theme as JSON string
 ✓ tests/theme-manager.test.ts > ThemeManager > Theme import/export > exportTheme > should format JSON nicely
 ✓ tests/theme-manager.test.ts > ThemeManager > Theme import/export > importTheme > should import valid theme JSON
 ✓ tests/theme-manager.test.ts > ThemeManager > Theme import/export > importTheme > should return null for invalid JSON
 ✓ tests/theme-manager.test.ts > ThemeManager > Theme import/export > importTheme > should validate theme structure
 ✓ tests/theme-manager.test.ts > ThemeManager > Theme import/export > importTheme > should validate required colors
 ✓ tests/theme-manager.test.ts > ThemeManager > Persistence edge cases > should handle missing localStorage gracefully
 ✓ tests/theme-manager.test.ts > ThemeManager > Persistence edge cases > should handle localStorage getItem errors
 ✓ tests/theme-manager.test.ts > ThemeManager > Utility methods > should convert camelCase to kebab-case
 ✓ tests/theme-manager.test.ts > ThemeManager > Utility methods > should handle hex to RGB conversion
stderr | tests/theme-manager.test.ts > ThemeManager > Constructor > should fall back to default theme if saved theme not found
Could not resolve saved theme "nonexistent", falling back to default

stderr | tests/advanced-features.test.ts > I18nManager > should handle missing translations
Missing translation for key: missing.key

stderr | tests/advanced-features.test.ts > TableOfContents > should generate TOC from markdown
`marked.lexer` failed, falling back to manual heading parsing.

stderr | tests/advanced-features.test.ts > TableOfContents > should generate unique IDs
`marked.lexer` failed, falling back to manual heading parsing.

stderr | tests/advanced-features.test.ts > TableOfContents > should render TOC HTML
`marked.lexer` failed, falling back to manual heading parsing.

 ✓ tests/advanced-features.test.ts > Export Utility Functions > should escape HTML special characters in export content
 ✓ tests/advanced-features.test.ts > Export Utility Functions > should sanitize malicious HTML content
 ✓ tests/advanced-features.test.ts > Export Utility Functions > should handle various URL protocols in content
 ✓ tests/advanced-features.test.ts > Export Utility Functions > should handle non-string inputs gracefully
 ✓ tests/advanced-features.test.ts > ExportManager > should create export manager
 ✓ tests/advanced-features.test.ts > ExportManager > should export HTML
 ✓ tests/advanced-features.test.ts > ExportManager > should handle invalid export format
 ✓ tests/advanced-features.test.ts > ExportManager > should export HTML without theme
 ✓ tests/advanced-features.test.ts > ExportManager > should export HTML with specific document IDs
 ✓ tests/advanced-features.test.ts > ExportManager > should export HTML with asset embedding
 ✓ tests/advanced-features.test.ts > ExportManager > should handle documents with descriptions and tags
 ✓ tests/advanced-features.test.ts > ExportManager > should handle documents without descriptions or tags
 ✓ tests/advanced-features.test.ts > ExportManager > should handle PDF export without html2pdf dependency
 ✓ tests/advanced-features.test.ts > ExportManager > should check PDF export availability
 ✓ tests/advanced-features.test.ts > ExportManager > should handle empty document list
 ✓ tests/advanced-features.test.ts > ExportManager > should handle custom export options
 ✓ tests/advanced-features.test.ts > I18nManager > should translate messages
 ✓ tests/advanced-features.test.ts > I18nManager > should handle missing translations
 ✓ tests/advanced-features.test.ts > I18nManager > should interpolate parameters
 ✓ tests/advanced-features.test.ts > I18nManager > should switch locales
 ✓ tests/advanced-features.test.ts > I18nManager > should list available locales
 ✓ tests/advanced-features.test.ts > TableOfContents > should generate TOC from markdown
 ✓ tests/advanced-features.test.ts > TableOfContents > should generate unique IDs
 ✓ tests/advanced-features.test.ts > TableOfContents > should render TOC HTML
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should search documents
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should apply category filters
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should apply tag filters
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should generate highlights
 ✓ tests/advanced-features.test.ts > AdvancedSearchManager > should get search suggestions
 ✓ tests/advanced-features.test.ts > addHeadingIds > should add IDs to headings
 ✓ tests/advanced-features.test.ts > addHeadingIds > should handle duplicate headings
 ✓ tests/advanced-features.test.ts > generatePrintStyles > should generate print CSS
 ✓ tests/search.test.ts > SearchManager > Search input handling > should trim whitespace from query
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should navigate down through results
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should navigate up through results
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should wrap around when navigating
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should select result on Enter key
 ✓ tests/search.test.ts > SearchManager > Keyboard navigation > should hide results on Escape key
 ✓ tests/search.test.ts > SearchManager > Search results rendering > should render search results
 ✓ tests/search.test.ts > SearchManager > Search results rendering > should render no results message
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should create a viewer instance with valid config
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should throw error when container not found
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should apply default configuration
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Management > should set theme correctly
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Management > should apply theme styles to document head
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should load documents from local source
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should get document by id
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should return null for non-existent document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should get all documents
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should load specific document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should handle loading non-existent document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by title
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by content
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by tags
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should return empty results for no matches
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should be case insensitive
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should handle missing container
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should handle missing source
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply navigation defaults
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply search defaults
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply render defaults
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State Management > should have initial state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State Management > should update state when loading document
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State Management > should handle errors in state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Cleanup > should clean up resources on destroy
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Event Handling > should call onDocumentLoad callback
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Event Handling > should call onError callback on errors
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Methods > should get current theme
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Methods > should get theme styles
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Methods > should get available themes
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Methods > should register custom themes
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Methods > should create custom themes with overrides
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should get all documents
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should get documents (alias method)
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should get document content
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should handle document content loading error
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Methods > should perform search
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Search Methods > should handle search errors gracefully
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State and Config Methods > should get current state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > State and Config Methods > should get current config
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle dependency validation errors
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle container validation with string selector
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle container validation with missing selector
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle marked configuration errors gracefully
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should save and restore navigation state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Integration > should handle theme change events
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Integration > should handle theme string parameter
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Theme Integration > should handle invalid theme string gracefully
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render markdown content
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should handle markdown rendering errors
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render error states
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render header with theme switcher and dark mode toggle
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render sidebar content
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render main content area
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render footer
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should save and restore navigation state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should save desktop sidebar state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should restore navigation state for categories
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should handle category toggling
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup mobile interactions
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup sidebar backdrop
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup swipe gestures
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup touch optimizations
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup responsive handlers
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should update responsive UI
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should update sidebar state
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should update desktop sidebar
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Keyboard Navigation > should handle navigation keydown events
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Keyboard Navigation > should handle category keydown events
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Keyboard Navigation > should announce navigation changes
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should refresh the viewer
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should handle search queries
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should handle errors with error handler
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should configure marked parser
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should attach event listeners
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should validate dependencies
 ✓ tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should save navigation state for categories
stderr | tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should create a viewer instance with valid config
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should throw error when container not found
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
[INVALID_CONFIG] Unable to find the container element. Please check your configuration.

 ✓ tests/search.test.ts > SearchManager > Search results rendering > should highlight search query in results
stderr | tests/viewer.test.ts > MarkdownDocsViewer > Constructor > should apply default configuration
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Theme Management > should set theme correctly
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Theme Management > should apply theme styles to document head
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should load documents from local source
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should get document by id
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should return null for non-existent document
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should get all documents
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should load specific document
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Management > should handle loading non-existent document
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by title
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by content
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should search by tags
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should return empty results for no matches
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Functionality > should be case insensitive
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should handle missing container
[INVALID_CONFIG] Container element is required for initialization.

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should handle missing source
[INVALID_CONFIG] Document source configuration is required.

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply navigation defaults
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply search defaults
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Configuration Validation > should apply render defaults
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > State Management > should have initial state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > State Management > should update state when loading document
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > State Management > should handle errors in state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Cleanup > should clean up resources on destroy
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Event Handling > should call onDocumentLoad callback
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Event Handling > should call onError callback on errors
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should get all documents
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should get documents (alias method)
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should get document content
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Document Methods > should handle document content loading error
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
[FILE_READ_ERROR] Unable to load the requested file. Please check if the file exists and is accessible.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'error-doc' }

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Methods > should perform search
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Search Methods > should handle search errors gracefully
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > State and Config Methods > should get current state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > State and Config Methods > should get current config
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle dependency validation errors
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle container validation with string selector
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Error during cleanup {
  error: TypeError: 'remove' called on an object that is not a valid instance of Element.
      at HTMLElement.remove (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/node_modules/jsdom/lib/jsdom/living/generated/Element.js:981:15)
      at ThemeSwitcher.destroy (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/src/theme-switcher.ts:705:16)
      at MarkdownDocsViewer.destroy (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/src/viewer.ts:1443:28)
      at /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts:233:14
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:135:14
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:60:26
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:700:59
      at Array.map (<anonymous>)
      at callSuiteHook (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:700:47)
      at callSuiteHook (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:708:16)
}

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle container validation with missing selector
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
[INVALID_CONFIG] Unable to find the container element. Please check your configuration.

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Error Handling > should handle marked configuration errors gracefully
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should save and restore navigation state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Theme Integration > should handle theme change events
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Theme Integration > should handle theme string parameter
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Theme Integration > should handle invalid theme string gracefully
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render markdown content
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Error: Failed to render markdown, showing raw content {
  error: TypeError: __vite_ssr_import_0__.marked is not a function
      at MarkdownDocsViewer.renderMarkdown (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/src/viewer.ts:706:18)
      at /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts:790:37
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:135:14
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:60:26
      at runTest (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:781:17)
      at runSuite (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:909:15)
      at runSuite (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:909:15)
      at runSuite (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:909:15)
      at runFiles (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:958:5)
      at startTests (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:967:3)
}

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should handle markdown rendering errors
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Error: Failed to render markdown, showing raw content {
  error: TypeError: __vite_ssr_import_0__.marked is not a function
      at MarkdownDocsViewer.renderMarkdown (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/src/viewer.ts:706:18)
      at /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts:807:37
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:135:14
      at file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:60:26
      at runTest (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:781:17)
      at runSuite (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:909:15)
      at runSuite (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:909:15)
      at runSuite (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:909:15)
      at runFiles (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:958:5)
      at startTests (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/runner/dist/index.js:967:3)
}

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render error states
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render header with theme switcher and dark mode toggle
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render sidebar content
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render main content area
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Content Rendering > should render footer
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should save and restore navigation state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should save desktop sidebar state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should restore navigation state for categories
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Navigation State Management > should handle category toggling
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup mobile interactions
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
[UNKNOWN_ERROR] An unexpected error occurred. Please try again.
MarkdownDocsViewer Warning: Failed to setup mobile interactions undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup sidebar backdrop
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup swipe gestures
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup touch optimizations
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should setup responsive handlers
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should update responsive UI
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should update sidebar state
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Mobile and Responsive Features > should update desktop sidebar
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Keyboard Navigation > should handle navigation keydown events
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Keyboard Navigation > should handle category keydown events
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Keyboard Navigation > should announce navigation changes
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should refresh the viewer
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should handle search queries
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stdout | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should handle errors with error handler
[undefined] undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should handle errors with error handler
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should configure marked parser
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Failed to configure markdown parser {
  error: TypeError: __vite_ssr_import_0__.marked.setOptions is not a function
      at MarkdownDocsViewer.configureMarked (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/src/viewer.ts:425:14)
      at /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts:1045:36
      at Proxy.assertThrows (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/node_modules/chai/lib/chai/core/assertions.js:2644:7)
      at Proxy.methodWrapper (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/node_modules/chai/lib/chai/utils/addMethod.js:57:25)
      at Proxy.<anonymous> (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/expect/dist/index.js:850:16)
      at Proxy.overwritingMethodWrapper (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/node_modules/chai/lib/chai/utils/overwriteMethod.js:78:33)
      at Proxy.<anonymous> (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/expect/dist/index.js:1324:19)
      at Proxy.<anonymous> (file:///Users/austinorphan/Library/Mobile%20Documents/com%7Eapple%7ECloudDocs/src/markdown-docs-viewer/node_modules/@vitest/expect/dist/index.js:800:17)
      at Proxy.methodWrapper (/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/node_modules/chai/lib/chai/utils/addMethod.js:57:25)
      at /Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts:1045:54
}

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should attach event listeners
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
[UNKNOWN_ERROR] An unexpected error occurred. Please try again.
MarkdownDocsViewer Warning: Failed to attach some event listeners undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should validate dependencies
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

stderr | tests/viewer.test.ts > MarkdownDocsViewer > Additional Methods > should save navigation state for categories
MarkdownDocsViewer Warning: Optional dependency missing: highlight.js.highlightElement - Auto-highlighting will be disabled undefined

 ✓ tests/search.test.ts > SearchManager > Search results rendering > should render document with all fields
 ✓ tests/search.test.ts > SearchManager > Focus and blur handling > should perform search on focus if query exists
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > Constructor > should initialize with default options
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > Constructor > should initialize with custom options
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should render theme switcher HTML with default options
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should render floating switcher when position is floating
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should hide custom theme button when allowCustomThemes is false
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should render all available themes as options
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should mark current theme as active
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should show theme descriptions when enabled
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should hide theme descriptions when disabled
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should show theme preview when enabled
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should hide theme preview when disabled
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should use appropriate theme icons
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > render > should handle theme without description
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > attachTo > should attach to container and setup event listeners
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > attachTo > should handle missing trigger gracefully
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > dropdown functionality > should toggle dropdown when trigger is clicked
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > dropdown functionality > should close dropdown when clicking outside
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > dropdown functionality > should not close dropdown when clicking inside
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > dropdown functionality > should prevent event bubbling on trigger click
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme selection > should select theme when option is clicked
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme selection > should close dropdown after selecting theme
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme selection > should call onThemeChange callback when theme is selected
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme selection > should update UI after theme selection
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme selection > should handle theme selection when setTheme returns null
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme selection > should ignore clicks on non-theme elements
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > custom theme button > should handle custom theme button click
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > custom theme button > should close dropdown when custom theme button is clicked
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should navigate down with ArrowDown key
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should navigate up with ArrowUp key
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should wrap around at the end with ArrowDown
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should select theme with Enter key
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should select theme with Space key
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should close dropdown with Escape key
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should not respond to keyboard when dropdown is closed
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > keyboard navigation > should handle keyboard navigation when no option is focused
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme icons > should return correct icons for known themes
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > theme icons > should return default icon for unknown themes
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > getStyles > should return CSS styles string
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > getStyles > should include floating styles
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > getStyles > should include mobile responsive styles
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > getStyles > should include dropdown animation styles
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > getStyles > should include preview styles
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > edge cases > should handle empty themes array
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > edge cases > should handle theme without colors for preview
 ✓ tests/theme-switcher.test.ts > ThemeSwitcher > edge cases > should handle missing DOM elements gracefully
 ✓ tests/search.test.ts > SearchManager > Focus and blur handling > should hide results on blur with delay
 ✓ tests/search.test.ts > SearchManager > Public methods > should clear search
 ✓ tests/search.test.ts > SearchManager > Public methods > should set documents for selection
 ✓ tests/search.test.ts > SearchManager > destroy > should remove event listeners
 ✓ tests/search.test.ts > SearchManager > Search options > should pass search options to index
 ✓ tests/search.test.ts > SearchManager > Search options > should use default maxResults if not specified
 ✓ tests/search.test.ts > SearchManager > Mouse interactions > should activate result on mouse enter
 ✓ tests/search.test.ts > SearchManager > Mouse interactions > should select result on click
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > DOM Structure Creation > should create proper semantic HTML structure
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > DOM Structure Creation > should render navigation with proper ARIA attributes
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > DOM Structure Creation > should create accessible mobile toggle button
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Search Interface > should render search input with proper attributes
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Search Interface > should update search results when typing
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Search Interface > should show no results for empty search
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Document Rendering > should render markdown content properly
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Document Rendering > should render code blocks with copy buttons when enabled
stderr | tests/toc.test.ts > TableOfContents > generate > should fallback to manual parsing when lexer fails
`marked.lexer` failed, falling back to manual heading parsing.

stderr | tests/toc.test.ts > TableOfContents > generate > should handle manual parsing with various heading formats
`marked.lexer` failed, falling back to manual heading parsing.

 ✓ tests/toc.test.ts > TableOfContents > Constructor > should initialize with default options
 ✓ tests/toc.test.ts > TableOfContents > Constructor > should initialize with custom options
 ✓ tests/toc.test.ts > TableOfContents > Constructor > should merge custom options with defaults
 ✓ tests/toc.test.ts > TableOfContents > generate > should return empty array when disabled
 ✓ tests/toc.test.ts > TableOfContents > generate > should generate TOC from markdown tokens
 ✓ tests/toc.test.ts > TableOfContents > generate > should respect maxDepth option
 ✓ tests/toc.test.ts > TableOfContents > generate > should handle empty content
 ✓ tests/toc.test.ts > TableOfContents > generate > should handle content with no headings
 ✓ tests/toc.test.ts > TableOfContents > generate > should fallback to manual parsing when lexer fails
 ✓ tests/toc.test.ts > TableOfContents > generate > should handle manual parsing with various heading formats
 ✓ tests/toc.test.ts > TableOfContents > generate > should generate unique IDs for headings
 ✓ tests/toc.test.ts > TableOfContents > render > should render TOC HTML
 ✓ tests/toc.test.ts > TableOfContents > render > should render with custom position
 ✓ tests/toc.test.ts > TableOfContents > render > should render sticky TOC
 ✓ tests/toc.test.ts > TableOfContents > render > should render collapsible TOC
 ✓ tests/toc.test.ts > TableOfContents > render > should handle empty TOC items
 ✓ tests/toc.test.ts > TableOfContents > render > should render collapsible classes
 ✓ tests/toc.test.ts > TableOfContents > initScrollSpy > should init scroll spy when enabled
 ✓ tests/toc.test.ts > TableOfContents > initScrollSpy > should not init scroll spy when disabled
 ✓ tests/toc.test.ts > TableOfContents > initScrollSpy > should handle container without headings
 ✓ tests/toc.test.ts > TableOfContents > destroy > should handle destroy
 ✓ tests/toc.test.ts > TableOfContents > destroy > should handle destroy without setup
 ✓ tests/toc.test.ts > TableOfContents > getStyles > should return CSS styles
 ✓ tests/toc.test.ts > TableOfContents > generateId through generate method > should generate slug from text
 ✓ tests/toc.test.ts > TableOfContents > generateId through generate method > should handle special characters
 ✓ tests/toc.test.ts > TableOfContents > generateId through generate method > should handle empty text
 ✓ tests/toc.test.ts > TableOfContents > generateId through generate method > should handle duplicate IDs
 ✓ tests/toc.test.ts > TableOfContents > Edge cases > should handle deeply nested headings
 ✓ tests/toc.test.ts > TableOfContents > Edge cases > should handle headings starting at level 2
 ✓ tests/toc.test.ts > TableOfContents > Edge cases > should handle non-sequential heading levels
 ✓ tests/themes.test.ts > Themes > themes.default.light > should have all required color properties
 ✓ tests/themes.test.ts > Themes > themes.default.light > should have valid CSS color values
 ✓ tests/themes.test.ts > Themes > themes.default.light > should have all required font properties
 ✓ tests/themes.test.ts > Themes > themes.default.light > should have valid font stacks
 ✓ tests/themes.test.ts > Themes > themes.default.dark > should have all required color properties
 ✓ tests/themes.test.ts > Themes > themes.default.dark > should have different colors from default theme
 ✓ tests/themes.test.ts > Themes > themes.default.dark > should have dark background colors
 ✓ tests/themes.test.ts > Themes > themes.default.dark > should have light text colors for contrast
 ✓ tests/themes.test.ts > Themes > themes.default.dark > should have same font structure as default theme
 ✓ tests/themes.test.ts > Themes > Theme Validation > should have consistent structure between themes
 ✓ tests/themes.test.ts > Themes > Theme Validation > should have valid CSS units for spacing if present
 ✓ tests/themes.test.ts > Themes > Theme Validation > should have valid CSS units for radius if present
 ✓ tests/themes.test.ts > Themes > Accessibility Considerations > should have sufficient contrast between text and background
 ✓ tests/themes.test.ts > Themes > Accessibility Considerations > should not rely only on color for information
 ✓ tests/themes.test.ts > Themes > Custom Theme Creation > should be possible to extend default theme
 ✓ tests/themes.test.ts > Themes > Custom Theme Creation > should be possible to extend dark theme
 ✓ tests/themes.test.ts > Themes > Custom Theme Creation > should be possible to create completely custom theme
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should create custom theme based on default theme
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should create custom theme based on dark theme when name contains dark
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should merge all theme properties
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should handle empty overrides
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should handle overrides with undefined values
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should handle new signature with base name and mode
 ✓ tests/themes.test.ts > Themes > createCustomTheme > should support backward compatibility for dark theme name
 ✓ tests/errors.test.ts > Error Handling System > MarkdownDocsError > should create error with all properties
 ✓ tests/errors.test.ts > Error Handling System > MarkdownDocsError > should have default values
 ✓ tests/errors.test.ts > Error Handling System > MarkdownDocsError > should serialize to JSON correctly
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create container not found error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create document not found error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create network error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create GitHub API error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create GitHub rate limit error
 ✓ tests/errors.test.ts > Error Handling System > ErrorFactory > should create parse error
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should succeed on first attempt
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should retry on failure and eventually succeed
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should not retry non-retryable errors
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should respect maxAttempts configuration
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should handle non-MarkdownDocsError exceptions
 ✓ tests/errors.test.ts > Error Handling System > withRetry > should apply exponential backoff delays
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should execute operation successfully
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should handle errors and call fallback
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should pass through MarkdownDocsError unchanged
 ✓ tests/errors.test.ts > Error Handling System > ErrorBoundary > should work without error handler
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in development mode > should log detailed error information
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in development mode > should log debug messages in development
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in production mode > should log simplified error information
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > in production mode > should not log debug messages in production
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > should use appropriate log levels for different severities
 ✓ tests/errors.test.ts > Error Handling System > ConsoleErrorLogger > should log warnings and errors
 ✓ tests/errors.test.ts > Error Handling System > Error Code Coverage > should have all error codes defined
 ✓ tests/errors.test.ts > Error Handling System > Error Code Coverage > should have all error severities defined
 ✓ tests/errors.test.ts > Error Handling System > Default Retry Configuration > should have sensible defaults
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Constructor > should initialize with default options
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Constructor > should initialize with custom options
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Constructor > should determine initial dark state based on current theme
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Constructor > should determine initial light state based on current theme
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > render > should render toggle HTML with default options
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > render > should render toggle HTML with label when showLabel is true
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > render > should render floating toggle when position is floating
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > render > should render in dark state when initialized as dark
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > render > should generate unique IDs for multiple instances
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > attachTo > should attach to container and setup event listeners
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > attachTo > should handle missing button gracefully
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > toggle > should toggle from light to dark mode
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > toggle > should toggle from dark to light mode
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > toggle > should dispatch custom event on toggle
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > toggle > should call onToggle callback if provided
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > toggle > should handle theme manager returning null
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > setDarkMode > should toggle to dark mode when called with true
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > setDarkMode > should toggle to light mode when called with false
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > setDarkMode > should not toggle if already in requested state
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > updateUI > should update button classes and attributes when toggled
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > updateUI > should update label text when toggled with showLabel enabled
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > updateUI > should update icon when toggled
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > updateUI > should handle missing elements gracefully
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Theme change event handling > should update state when external theme change event is received
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Theme change event handling > should not update state if theme name matches current state
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Theme change event handling > should handle theme change event without detail
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Button click handling > should toggle when button is clicked
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > getStyles > should return CSS styles string
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > getStyles > should include responsive styles
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > getStyles > should include accessibility styles
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Icon rendering > should render sun icon in light mode
 ✓ tests/dark-mode-toggle.test.ts > DarkModeToggle > Icon rendering > should render moon icon in dark mode
stderr | tests/theme-builder.test.ts > ThemeBuilder > Edge cases > should handle missing container gracefully
Color inputs not found for: primary
Color inputs not found for: secondary
Color inputs not found for: background
Color inputs not found for: surface
Color inputs not found for: text
Color inputs not found for: textPrimary
Color inputs not found for: textSecondary
Color inputs not found for: textLight
Color inputs not found for: border
Color inputs not found for: code
Color inputs not found for: codeBackground
Color inputs not found for: link
Color inputs not found for: linkHover
Color inputs not found for: error
Color inputs not found for: warning
Color inputs not found for: success
Font input not found: font-body
Font input not found: font-heading
Font input not found: font-code
Spacing input not found: spacing-unit
Spacing input not found: spacing-containerMaxWidth
Spacing input not found: spacing-sidebarWidth

stderr | tests/theme-builder.test.ts > ThemeBuilder > Edge cases > should handle missing DOM elements gracefully
Color inputs not found for: primary
Color inputs not found for: secondary
Color inputs not found for: background
Color inputs not found for: surface
Color inputs not found for: text
Color inputs not found for: textPrimary
Color inputs not found for: textSecondary
Color inputs not found for: textLight
Color inputs not found for: border
Color inputs not found for: code
Color inputs not found for: codeBackground
Color inputs not found for: link
Color inputs not found for: linkHover
Color inputs not found for: error
Color inputs not found for: warning
Color inputs not found for: success
Font input not found: font-body
Font input not found: font-heading
Font input not found: font-code
Spacing input not found: spacing-unit
Spacing input not found: spacing-containerMaxWidth
Spacing input not found: spacing-sidebarWidth

 ✓ tests/theme-builder.test.ts > ThemeBuilder > Constructor > should initialize with default options
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Constructor > should initialize with custom options
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Constructor > should copy current theme as starting point
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should render theme builder HTML with all sections
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should include all color input categories
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should include all action buttons by default
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should hide import/export buttons when disabled
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should hide preview when disabled
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should hide accessibility check when disabled
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should render font inputs
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should render spacing inputs
 ✓ tests/theme-builder.test.ts > ThemeBuilder > render > should render base theme options
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Color inputs rendering > should render all required color inputs
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Color inputs rendering > should group colors by category
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Color inputs rendering > should include color descriptions
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Preview rendering > should render preview with sample content
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Preview rendering > should apply theme colors to preview elements
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Preview rendering > should render primary and secondary buttons
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Accessibility check rendering > should render contrast ratio checks
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Accessibility check rendering > should show pass/fail indicators
 ✓ tests/theme-builder.test.ts > ThemeBuilder > open and close > should open the theme builder
 ✓ tests/theme-builder.test.ts > ThemeBuilder > open and close > should close the theme builder
 ✓ tests/theme-builder.test.ts > ThemeBuilder > open and close > should call onClose callback when closed
 ✓ tests/theme-builder.test.ts > ThemeBuilder > attachTo and event listeners > should close when close button is clicked
 ✓ tests/theme-builder.test.ts > ThemeBuilder > attachTo and event listeners > should close when overlay is clicked
 ✓ tests/theme-builder.test.ts > ThemeBuilder > attachTo and event listeners > should not close when clicking inside the builder
 ✓ tests/theme-builder.test.ts > ThemeBuilder > attachTo and event listeners > should close on Escape key
 ✓ tests/theme-builder.test.ts > ThemeBuilder > attachTo and event listeners > should not close on Escape when not open
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Color input interactions > should update color when color input changes
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Color input interactions > should update color when text input changes with valid color
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Color input interactions > should not update with invalid color format
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Font input interactions > should update font when input changes
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Spacing input interactions > should update spacing when inputs change
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Theme name and border radius > should update theme name
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Theme name and border radius > should update border radius
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Base theme selection > should load different base theme when selected
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Action buttons > should save theme when save button is clicked
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Action buttons > should reset theme when reset button is clicked
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Action buttons > should handle export theme
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Action buttons > should handle import theme
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Utility methods > should validate colors correctly
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Utility methods > should convert camelCase to kebab-case
 ✓ tests/theme-builder.test.ts > ThemeBuilder > getStyles > should return CSS styles string
 ✓ tests/theme-builder.test.ts > ThemeBuilder > getStyles > should include mobile responsive styles
 ✓ tests/theme-builder.test.ts > ThemeBuilder > getStyles > should include accessibility styles
 ✓ tests/theme-builder.test.ts > ThemeBuilder > getStyles > should include color input styles
 ✓ tests/theme-builder.test.ts > ThemeBuilder > getStyles > should include button styles
 ✓ tests/theme-builder.test.ts > ThemeBuilder > getStyles > should include preview styles
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Edge cases > should handle missing container gracefully
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Edge cases > should handle missing DOM elements gracefully
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Edge cases > should handle file import errors gracefully
 ✓ tests/theme-builder.test.ts > ThemeBuilder > Edge cases > should handle theme creation without onThemeCreate callback
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Document Rendering > should handle copy button clicks
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > User Interactions > should handle navigation link clicks
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > User Interactions > should handle mobile toggle clicks
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > User Interactions > should update sidebar open state visually
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Responsive Behavior > should close mobile sidebar when window is desktop size
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Error Handling in DOM > should display error state in DOM
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Error Handling in DOM > should display loading state in DOM
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Cleanup and Memory Management > should properly clean up DOM on destroy
 ✓ tests/dom-integration.test.ts > DOM Integration Tests > Cleanup and Memory Management > should remove event listeners on destroy
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete vscode theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for vscode
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete nord theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for nord
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete dracula theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for dracula
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete solarized theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for solarized
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete monokai theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for monokai
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete ayu theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for ayu
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete catppuccin theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for catppuccin
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have complete tokyo theme definition
 ✓ tests/new-themes.test.ts > New Theme Integration > Base Themes Structure > should have valid color values for tokyo
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Generation > should generate all theme variants including new themes
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Generation > should have proper theme structure for all variants
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Manager Integration > should register all new themes in ThemeManager
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Manager Integration > should be able to set new themes
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Utilities > should correctly extract base names from new theme names
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Utilities > should correctly extract modes from new theme names
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Color Accessibility > should have good contrast between text and background for all new themes
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Font Families > should have appropriate font families for each theme
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Font Families > should have theme-specific fonts where appropriate
 ✓ tests/new-themes.test.ts > New Theme Integration > Theme Descriptions > should have meaningful descriptions for all new themes
 ✓ tests/router.test.ts > Router > Constructor > should initialize with hash mode
 ✓ tests/router.test.ts > Router > Constructor > should initialize with memory mode
 ✓ tests/router.test.ts > Router > Constructor > should initialize with none mode
 ✓ tests/router.test.ts > Router > Constructor > should handle initial hash on construction
 ✓ tests/router.test.ts > Router > Constructor > should not trigger route change for empty initial hash
 ✓ tests/router.test.ts > Router > setRoute > should set hash when in hash mode
 ✓ tests/router.test.ts > Router > setRoute > should not set hash when in memory mode
 ✓ tests/router.test.ts > Router > setRoute > should not set hash when in none mode
 ✓ tests/router.test.ts > Router > setRoute > should update current route in memory mode
 ✓ tests/router.test.ts > Router > setRoute > should update current route in none mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return hash value in hash mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return null for empty hash in hash mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return current route in memory mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return null when no route set in memory mode
 ✓ tests/router.test.ts > Router > getCurrentRoute > should return current route in none mode
 ✓ tests/router.test.ts > Router > Hash change handling > should handle hash change events
 ✓ tests/router.test.ts > Router > Hash change handling > should not trigger route change for same hash
 ✓ tests/router.test.ts > Router > Hash change handling > should not trigger route change for empty hash
 ✓ tests/router.test.ts > Router > Hash change handling > should track current route correctly
 ✓ tests/router.test.ts > Router > destroy > should remove event listener in hash mode
 ✓ tests/router.test.ts > Router > destroy > should not remove event listener in memory mode
 ✓ tests/router.test.ts > Router > destroy > should not remove event listener in none mode
 ✓ tests/router.test.ts > Router > destroy > should stop responding to hash changes after destroy
 ✓ tests/router.test.ts > Router > Edge cases > should handle special characters in hash
 ✓ tests/router.test.ts > Router > Edge cases > should handle encoded characters in hash
 ✓ tests/router.test.ts > Router > Edge cases > should handle rapid route changes
 ✓ tests/router.test.ts > Router > Edge cases > should handle setting same route multiple times
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should escape HTML special characters
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should escape ampersands
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should escape quotes
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should handle null and undefined values
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should handle numbers
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should handle empty strings
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtml > should not modify safe text
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtmlAttribute > should escape HTML attribute special characters
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtmlAttribute > should escape newlines and tabs
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtmlAttribute > should handle null and undefined values
 ✓ tests/utils.test.ts > HTML Security Utilities > escapeHtmlAttribute > should handle numbers
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should allow valid hex colors
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should allow valid rgb/rgba colors
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should allow valid hsl/hsla colors
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should allow named colors
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should reject invalid colors
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should handle null and undefined values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssColor > should trim whitespace
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeFontFamily > should allow valid font families
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeFontFamily > should allow font names with hyphens
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeFontFamily > should reject fonts with suspicious content
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeFontFamily > should reject overly long font names
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeFontFamily > should handle null and undefined values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeFontFamily > should trim whitespace
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should allow valid pixel values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should allow valid rem/em values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should allow percentages
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should allow viewport units
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should allow unitless numbers
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should reject invalid values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should reject overly long values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should handle null and undefined values
 ✓ tests/utils.test.ts > HTML Security Utilities > sanitizeCssValue > should trim whitespace
 ✓ tests/utils.test.ts > XSS Prevention Integration > should prevent theme name XSS injection
 ✓ tests/utils.test.ts > XSS Prevention Integration > should prevent CSS injection in colors
 ✓ tests/utils.test.ts > XSS Prevention Integration > should prevent CSS injection in fonts
 ✓ tests/utils.test.ts > XSS Prevention Integration > should prevent CSS injection in spacing values
 ✓ tests/index.test.ts > Index Exports > should export MarkdownDocsViewer
 ✓ tests/index.test.ts > Index Exports > should export themes
 ✓ tests/index.test.ts > Index Exports > should export factory functions
 ✓ tests/index.test.ts > Index Exports > should export error handling utilities
 ✓ tests/index.test.ts > Index Exports > should export performance utilities
 ✓ tests/index.test.ts > Index Exports > should export search manager
 ✓ tests/index.test.ts > Index Exports > should export export utilities
 ✓ tests/index.test.ts > Index Exports > should export i18n utilities
 ✓ tests/index.test.ts > Index Exports > should export table of contents utilities
 ✓ tests/index.test.ts > Index Exports > should export advanced search
 ✓ tests/index.test.ts > Index Exports > should export print utilities
 ✓ tests/index.test.ts > Index Exports > should export type definitions
 ✓ tests/factory.test.ts > Factory Functions > createViewer > should create a new MarkdownDocsViewer instance with config
 ✓ tests/factory.test.ts > Factory Functions > createViewer > should pass through all configuration options
 ✓ tests/factory.test.ts > Factory Functions > quickStart > should create viewer with minimal configuration using string container
 ✓ tests/factory.test.ts > Factory Functions > quickStart > should create viewer with minimal configuration using HTMLElement container
 ✓ tests/factory.test.ts > Factory Functions > quickStart > should handle empty documents array
 ✓ tests/zero-config-basic.test.ts > Zero Config Basic Coverage > should import zero-config functions
 ✓ tests/zero-config-basic.test.ts > Zero Config Basic Coverage > should call getAvailableThemes
 ✓ tests/zero-config-basic.test.ts > Zero Config Basic Coverage > should call getViewer when no viewer exists
 ✓ tests/zero-config-basic.test.ts > Zero Config Basic Coverage > should warn when setting theme without viewer
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Static Functions > should test getAvailableThemes function
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Static Functions > should test generateConfig function
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Static Functions > should test getViewer when no viewer exists
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Static Functions > should test setTheme without viewer
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Static Functions > should test setTheme with invalid theme name
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Static Functions > should test reload without existing viewer
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > onDOMReady function > should handle DOM ready state when loading
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > onDOMReady function > should handle DOM ready state when complete
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Theme utilities > should test theme name parsing in setTheme
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Theme utilities > should handle theme name splitting correctly
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Container detection logic > should test container auto-detection fallbacks
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Container detection logic > should test container detection with .docs class
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Container detection logic > should test container detection with .documentation class
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Container detection logic > should fallback to body when no standard containers found
 ✓ tests/zero-config-comprehensive.test.ts > Zero Config API - Comprehensive Coverage > Export object > should test default export object
stderr | tests/loader.test.ts > DocumentLoader > loadLocal > should handle network errors
[NETWORK_ERROR] Unable to load content due to a network error. Please check your connection and try again.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadLocal > should handle other fetch errors
[FILE_READ_ERROR] Unable to load the requested file. Please check if the file exists and is accessible.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadFromUrl > should handle 401/403 errors
[UNAUTHORIZED_ACCESS] Access denied. Please check your credentials or permissions.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

 ✓ tests/loader.test.ts > DocumentLoader > loadLocal > should handle network errors 3006ms
 ✓ tests/loader.test.ts > DocumentLoader > loadLocal > should handle other fetch errors
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should load from URL with baseUrl
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should handle 401/403 errors
stderr | tests/loader.test.ts > DocumentLoader > loadFromUrl > should handle rate limiting (429)
[RATE_LIMITED] Too many requests. Please wait and try again.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle invalid GitHub path format
[INVALID_CONFIG] Invalid GitHub file path format.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should handle rate limiting (429) 3005ms
 ✓ tests/loader.test.ts > DocumentLoader > loadFromUrl > should include custom headers
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should load from GitHub successfully
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle invalid GitHub path format
stderr | tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle GitHub API rate limiting
[GITHUB_RATE_LIMIT] GitHub API rate limit reached. Please try again later.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle directory response
[GITHUB_API_ERROR] The specified GitHub path is a directory. Please specify a file path.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle missing content in response
[GITHUB_API_ERROR] The requested GitHub file appears to be empty or inaccessible.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should handle preload errors gracefully
[FILE_READ_ERROR] Unable to load the requested file. Please check if the file exists and is accessible.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

stderr | tests/loader.test.ts > DocumentLoader > Source Validation > should validate missing source
[INVALID_SOURCE] No documents are configured to load.
MarkdownDocsViewer Warning: Failed to load documents, returning empty array undefined

stderr | tests/loader.test.ts > DocumentLoader > Source Validation > should validate empty documents
[INVALID_SOURCE] No documents are configured to load.
MarkdownDocsViewer Warning: Failed to load documents, returning empty array undefined

stderr | tests/loader.test.ts > DocumentLoader > Source Validation > should warn about URL source without baseUrl
MarkdownDocsViewer Warning: URL source without baseUrl may cause issues with relative paths undefined

stderr | tests/loader.test.ts > DocumentLoader > Source Validation > should warn about content source with missing content
MarkdownDocsViewer Warning: Content source has documents without content { missingContentIds: [ 'doc1' ] }

stderr | tests/loader.test.ts > DocumentLoader > Error Handling with Retry > should handle retryable errors
[FILE_READ_ERROR] Unable to load the requested file. Please check if the file exists and is accessible.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }

 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle GitHub API rate limiting 3003ms
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle directory response
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should handle missing content in response
 ✓ tests/loader.test.ts > DocumentLoader > loadFromGithub > should use default branch when not specified
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should clear cache
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should get cache size
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should check if document is cached
 ✓ tests/loader.test.ts > DocumentLoader > Cache Management > should get cache stats
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should get performance metrics
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should update retry configuration
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should destroy and cleanup resources
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should preload documents
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should skip preloading cached documents
 ✓ tests/loader.test.ts > DocumentLoader > Performance and Utility Methods > should handle preload errors gracefully
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should validate missing source
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should validate empty documents
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should warn about URL source without baseUrl
 ✓ tests/loader.test.ts > DocumentLoader > Source Validation > should warn about content source with missing content
 ✓ tests/loader.test.ts > DocumentLoader > Error Handling with Retry > should handle retryable errors
 ✓ tests/loader.test.ts > DocumentLoader > Error Handling with Retry > should respect custom retry config
stderr | tests/loader.test.ts > DocumentLoader > Error Handling with Retry > should respect custom retry config
[FILE_READ_ERROR] Unable to load the requested file. Please check if the file exists and is accessible.
MarkdownDocsViewer Warning: Failed to load document, returning empty content { documentId: 'doc1' }


 Test Files  20 passed (20)
      Tests  627 passed | 3 skipped (630)
   Start at  16:34:59
   Duration  9.93s (transform 1.14s, setup 401ms, collect 2.04s, tests 12.84s, environment 7.12s, prepare 2.07s)

{"numTotalTestSuites":207,"numPassedTestSuites":207,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":630,"numPassedTests":630,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"startTime":1753824899313,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["","Export Utility Functions"],"fullName":" Export Utility Functions should escape HTML special characters in export content","status":"passed","title":"should escape HTML special characters in export content","duration":7,"failureMessages":[]},{"ancestorTitles":["","Export Utility Functions"],"fullName":" Export Utility Functions should sanitize malicious HTML content","status":"passed","title":"should sanitize malicious HTML content","duration":3,"failureMessages":[]},{"ancestorTitles":["","Export Utility Functions"],"fullName":" Export Utility Functions should handle various URL protocols in content","status":"passed","title":"should handle various URL protocols in content","duration":5,"failureMessages":[]},{"ancestorTitles":["","Export Utility Functions"],"fullName":" Export Utility Functions should handle non-string inputs gracefully","status":"passed","title":"should handle non-string inputs gracefully","duration":11,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should create export manager","status":"passed","title":"should create export manager","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should export HTML","status":"passed","title":"should export HTML","duration":2,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle invalid export format","status":"passed","title":"should handle invalid export format","duration":5,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should export HTML without theme","status":"passed","title":"should export HTML without theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should export HTML with specific document IDs","status":"passed","title":"should export HTML with specific document IDs","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should export HTML with asset embedding","status":"passed","title":"should export HTML with asset embedding","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle documents with descriptions and tags","status":"passed","title":"should handle documents with descriptions and tags","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle documents without descriptions or tags","status":"passed","title":"should handle documents without descriptions or tags","duration":0,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle PDF export without html2pdf dependency","status":"passed","title":"should handle PDF export without html2pdf dependency","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should check PDF export availability","status":"passed","title":"should check PDF export availability","duration":1,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle empty document list","status":"passed","title":"should handle empty document list","duration":0,"failureMessages":[]},{"ancestorTitles":["","ExportManager"],"fullName":" ExportManager should handle custom export options","status":"passed","title":"should handle custom export options","duration":2,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should translate messages","status":"passed","title":"should translate messages","duration":0,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should handle missing translations","status":"passed","title":"should handle missing translations","duration":1,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should interpolate parameters","status":"passed","title":"should interpolate parameters","duration":0,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should switch locales","status":"passed","title":"should switch locales","duration":0,"failureMessages":[]},{"ancestorTitles":["","I18nManager"],"fullName":" I18nManager should list available locales","status":"passed","title":"should list available locales","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents"],"fullName":" TableOfContents should generate TOC from markdown","status":"passed","title":"should generate TOC from markdown","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents"],"fullName":" TableOfContents should generate unique IDs","status":"passed","title":"should generate unique IDs","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents"],"fullName":" TableOfContents should render TOC HTML","status":"passed","title":"should render TOC HTML","duration":1,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should search documents","status":"passed","title":"should search documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should apply category filters","status":"passed","title":"should apply category filters","duration":1,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should apply tag filters","status":"passed","title":"should apply tag filters","duration":0,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should generate highlights","status":"passed","title":"should generate highlights","duration":0,"failureMessages":[]},{"ancestorTitles":["","AdvancedSearchManager"],"fullName":" AdvancedSearchManager should get search suggestions","status":"passed","title":"should get search suggestions","duration":1,"failureMessages":[]},{"ancestorTitles":["","addHeadingIds"],"fullName":" addHeadingIds should add IDs to headings","status":"passed","title":"should add IDs to headings","duration":9,"failureMessages":[]},{"ancestorTitles":["","addHeadingIds"],"fullName":" addHeadingIds should handle duplicate headings","status":"passed","title":"should handle duplicate headings","duration":2,"failureMessages":[]},{"ancestorTitles":["","generatePrintStyles"],"fullName":" generatePrintStyles should generate print CSS","status":"passed","title":"should generate print CSS","duration":1,"failureMessages":[]}],"startTime":1753824900232,"endTime":1753824900300,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/advanced-features.test.ts"},{"assertionResults":[{"ancestorTitles":["","DarkModeToggle","Constructor"],"fullName":" DarkModeToggle Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":4,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Constructor"],"fullName":" DarkModeToggle Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Constructor"],"fullName":" DarkModeToggle Constructor should determine initial dark state based on current theme","status":"passed","title":"should determine initial dark state based on current theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Constructor"],"fullName":" DarkModeToggle Constructor should determine initial light state based on current theme","status":"passed","title":"should determine initial light state based on current theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","render"],"fullName":" DarkModeToggle render should render toggle HTML with default options","status":"passed","title":"should render toggle HTML with default options","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","render"],"fullName":" DarkModeToggle render should render toggle HTML with label when showLabel is true","status":"passed","title":"should render toggle HTML with label when showLabel is true","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","render"],"fullName":" DarkModeToggle render should render floating toggle when position is floating","status":"passed","title":"should render floating toggle when position is floating","duration":0,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","render"],"fullName":" DarkModeToggle render should render in dark state when initialized as dark","status":"passed","title":"should render in dark state when initialized as dark","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","render"],"fullName":" DarkModeToggle render should generate unique IDs for multiple instances","status":"passed","title":"should generate unique IDs for multiple instances","duration":2,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","attachTo"],"fullName":" DarkModeToggle attachTo should attach to container and setup event listeners","status":"passed","title":"should attach to container and setup event listeners","duration":10,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","attachTo"],"fullName":" DarkModeToggle attachTo should handle missing button gracefully","status":"passed","title":"should handle missing button gracefully","duration":5,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","toggle"],"fullName":" DarkModeToggle toggle should toggle from light to dark mode","status":"passed","title":"should toggle from light to dark mode","duration":6,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","toggle"],"fullName":" DarkModeToggle toggle should toggle from dark to light mode","status":"passed","title":"should toggle from dark to light mode","duration":23,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","toggle"],"fullName":" DarkModeToggle toggle should dispatch custom event on toggle","status":"passed","title":"should dispatch custom event on toggle","duration":8,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","toggle"],"fullName":" DarkModeToggle toggle should call onToggle callback if provided","status":"passed","title":"should call onToggle callback if provided","duration":2,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","toggle"],"fullName":" DarkModeToggle toggle should handle theme manager returning null","status":"passed","title":"should handle theme manager returning null","duration":3,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","setDarkMode"],"fullName":" DarkModeToggle setDarkMode should toggle to dark mode when called with true","status":"passed","title":"should toggle to dark mode when called with true","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","setDarkMode"],"fullName":" DarkModeToggle setDarkMode should toggle to light mode when called with false","status":"passed","title":"should toggle to light mode when called with false","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","setDarkMode"],"fullName":" DarkModeToggle setDarkMode should not toggle if already in requested state","status":"passed","title":"should not toggle if already in requested state","duration":0,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","updateUI"],"fullName":" DarkModeToggle updateUI should update button classes and attributes when toggled","status":"passed","title":"should update button classes and attributes when toggled","duration":3,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","updateUI"],"fullName":" DarkModeToggle updateUI should update label text when toggled with showLabel enabled","status":"passed","title":"should update label text when toggled with showLabel enabled","duration":6,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","updateUI"],"fullName":" DarkModeToggle updateUI should update icon when toggled","status":"passed","title":"should update icon when toggled","duration":3,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","updateUI"],"fullName":" DarkModeToggle updateUI should handle missing elements gracefully","status":"passed","title":"should handle missing elements gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Theme change event handling"],"fullName":" DarkModeToggle Theme change event handling should update state when external theme change event is received","status":"passed","title":"should update state when external theme change event is received","duration":2,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Theme change event handling"],"fullName":" DarkModeToggle Theme change event handling should not update state if theme name matches current state","status":"passed","title":"should not update state if theme name matches current state","duration":2,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Theme change event handling"],"fullName":" DarkModeToggle Theme change event handling should handle theme change event without detail","status":"passed","title":"should handle theme change event without detail","duration":2,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Button click handling"],"fullName":" DarkModeToggle Button click handling should toggle when button is clicked","status":"passed","title":"should toggle when button is clicked","duration":3,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","getStyles"],"fullName":" DarkModeToggle getStyles should return CSS styles string","status":"passed","title":"should return CSS styles string","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","getStyles"],"fullName":" DarkModeToggle getStyles should include responsive styles","status":"passed","title":"should include responsive styles","duration":0,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","getStyles"],"fullName":" DarkModeToggle getStyles should include accessibility styles","status":"passed","title":"should include accessibility styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Icon rendering"],"fullName":" DarkModeToggle Icon rendering should render sun icon in light mode","status":"passed","title":"should render sun icon in light mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","DarkModeToggle","Icon rendering"],"fullName":" DarkModeToggle Icon rendering should render moon icon in dark mode","status":"passed","title":"should render moon icon in dark mode","duration":1,"failureMessages":[]}],"startTime":1753824900881,"endTime":1753824900981,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/dark-mode-toggle.test.ts"},{"assertionResults":[{"ancestorTitles":["","DOM Integration Tests","DOM Structure Creation"],"fullName":" DOM Integration Tests DOM Structure Creation should create proper semantic HTML structure","status":"passed","title":"should create proper semantic HTML structure","duration":135,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","DOM Structure Creation"],"fullName":" DOM Integration Tests DOM Structure Creation should render navigation with proper ARIA attributes","status":"passed","title":"should render navigation with proper ARIA attributes","duration":70,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","DOM Structure Creation"],"fullName":" DOM Integration Tests DOM Structure Creation should create accessible mobile toggle button","status":"passed","title":"should create accessible mobile toggle button","duration":55,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Search Interface"],"fullName":" DOM Integration Tests Search Interface should render search input with proper attributes","status":"passed","title":"should render search input with proper attributes","duration":66,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Search Interface"],"fullName":" DOM Integration Tests Search Interface should update search results when typing","status":"passed","title":"should update search results when typing","duration":31,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Search Interface"],"fullName":" DOM Integration Tests Search Interface should show no results for empty search","status":"passed","title":"should show no results for empty search","duration":20,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Document Rendering"],"fullName":" DOM Integration Tests Document Rendering should render markdown content properly","status":"passed","title":"should render markdown content properly","duration":84,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Document Rendering"],"fullName":" DOM Integration Tests Document Rendering should render code blocks with copy buttons when enabled","status":"passed","title":"should render code blocks with copy buttons when enabled","duration":45,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Document Rendering"],"fullName":" DOM Integration Tests Document Rendering should handle copy button clicks","status":"passed","title":"should handle copy button clicks","duration":67,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","User Interactions"],"fullName":" DOM Integration Tests User Interactions should handle navigation link clicks","status":"passed","title":"should handle navigation link clicks","duration":50,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","User Interactions"],"fullName":" DOM Integration Tests User Interactions should handle mobile toggle clicks","status":"passed","title":"should handle mobile toggle clicks","duration":15,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","User Interactions"],"fullName":" DOM Integration Tests User Interactions should update sidebar open state visually","status":"passed","title":"should update sidebar open state visually","duration":25,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Responsive Behavior"],"fullName":" DOM Integration Tests Responsive Behavior should close mobile sidebar when window is desktop size","status":"passed","title":"should close mobile sidebar when window is desktop size","duration":39,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Theme Application"],"fullName":" DOM Integration Tests Theme Application should apply theme styles to DOM","status":"skipped","title":"should apply theme styles to DOM","failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Theme Application"],"fullName":" DOM Integration Tests Theme Application should update styles when theme changes","status":"skipped","title":"should update styles when theme changes","failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Error Handling in DOM"],"fullName":" DOM Integration Tests Error Handling in DOM should display error state in DOM","status":"passed","title":"should display error state in DOM","duration":77,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Error Handling in DOM"],"fullName":" DOM Integration Tests Error Handling in DOM should display loading state in DOM","status":"passed","title":"should display loading state in DOM","duration":45,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Cleanup and Memory Management"],"fullName":" DOM Integration Tests Cleanup and Memory Management should properly clean up DOM on destroy","status":"passed","title":"should properly clean up DOM on destroy","duration":17,"failureMessages":[]},{"ancestorTitles":["","DOM Integration Tests","Cleanup and Memory Management"],"fullName":" DOM Integration Tests Cleanup and Memory Management should remove event listeners on destroy","status":"passed","title":"should remove event listeners on destroy","duration":13,"failureMessages":[]}],"startTime":1753824900311,"endTime":1753824901165,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/dom-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","Error Handling System","MarkdownDocsError"],"fullName":" Error Handling System MarkdownDocsError should create error with all properties","status":"passed","title":"should create error with all properties","duration":7,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","MarkdownDocsError"],"fullName":" Error Handling System MarkdownDocsError should have default values","status":"passed","title":"should have default values","duration":20,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","MarkdownDocsError"],"fullName":" Error Handling System MarkdownDocsError should serialize to JSON correctly","status":"passed","title":"should serialize to JSON correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create container not found error","status":"passed","title":"should create container not found error","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create document not found error","status":"passed","title":"should create document not found error","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create network error","status":"passed","title":"should create network error","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create GitHub API error","status":"passed","title":"should create GitHub API error","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create GitHub rate limit error","status":"passed","title":"should create GitHub rate limit error","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorFactory"],"fullName":" Error Handling System ErrorFactory should create parse error","status":"passed","title":"should create parse error","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should succeed on first attempt","status":"passed","title":"should succeed on first attempt","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should retry on failure and eventually succeed","status":"passed","title":"should retry on failure and eventually succeed","duration":9,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should not retry non-retryable errors","status":"passed","title":"should not retry non-retryable errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should respect maxAttempts configuration","status":"passed","title":"should respect maxAttempts configuration","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should handle non-MarkdownDocsError exceptions","status":"passed","title":"should handle non-MarkdownDocsError exceptions","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","withRetry"],"fullName":" Error Handling System withRetry should apply exponential backoff delays","status":"passed","title":"should apply exponential backoff delays","duration":4,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should execute operation successfully","status":"passed","title":"should execute operation successfully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should handle errors and call fallback","status":"passed","title":"should handle errors and call fallback","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should pass through MarkdownDocsError unchanged","status":"passed","title":"should pass through MarkdownDocsError unchanged","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ErrorBoundary"],"fullName":" Error Handling System ErrorBoundary should work without error handler","status":"passed","title":"should work without error handler","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in development mode"],"fullName":" Error Handling System ConsoleErrorLogger in development mode should log detailed error information","status":"passed","title":"should log detailed error information","duration":2,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in development mode"],"fullName":" Error Handling System ConsoleErrorLogger in development mode should log debug messages in development","status":"passed","title":"should log debug messages in development","duration":0,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in production mode"],"fullName":" Error Handling System ConsoleErrorLogger in production mode should log simplified error information","status":"passed","title":"should log simplified error information","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger","in production mode"],"fullName":" Error Handling System ConsoleErrorLogger in production mode should not log debug messages in production","status":"passed","title":"should not log debug messages in production","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger"],"fullName":" Error Handling System ConsoleErrorLogger should use appropriate log levels for different severities","status":"passed","title":"should use appropriate log levels for different severities","duration":4,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","ConsoleErrorLogger"],"fullName":" Error Handling System ConsoleErrorLogger should log warnings and errors","status":"passed","title":"should log warnings and errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","Error Code Coverage"],"fullName":" Error Handling System Error Code Coverage should have all error codes defined","status":"passed","title":"should have all error codes defined","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","Error Code Coverage"],"fullName":" Error Handling System Error Code Coverage should have all error severities defined","status":"passed","title":"should have all error severities defined","duration":1,"failureMessages":[]},{"ancestorTitles":["","Error Handling System","Default Retry Configuration"],"fullName":" Error Handling System Default Retry Configuration should have sensible defaults","status":"passed","title":"should have sensible defaults","duration":1,"failureMessages":[]}],"startTime":1753824900875,"endTime":1753824900942,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/errors.test.ts"},{"assertionResults":[{"ancestorTitles":["","Factory Functions","createViewer"],"fullName":" Factory Functions createViewer should create a new MarkdownDocsViewer instance with config","status":"passed","title":"should create a new MarkdownDocsViewer instance with config","duration":3,"failureMessages":[]},{"ancestorTitles":["","Factory Functions","createViewer"],"fullName":" Factory Functions createViewer should pass through all configuration options","status":"passed","title":"should pass through all configuration options","duration":2,"failureMessages":[]},{"ancestorTitles":["","Factory Functions","quickStart"],"fullName":" Factory Functions quickStart should create viewer with minimal configuration using string container","status":"passed","title":"should create viewer with minimal configuration using string container","duration":1,"failureMessages":[]},{"ancestorTitles":["","Factory Functions","quickStart"],"fullName":" Factory Functions quickStart should create viewer with minimal configuration using HTMLElement container","status":"passed","title":"should create viewer with minimal configuration using HTMLElement container","duration":2,"failureMessages":[]},{"ancestorTitles":["","Factory Functions","quickStart"],"fullName":" Factory Functions quickStart should handle empty documents array","status":"passed","title":"should handle empty documents array","duration":2,"failureMessages":[]}],"startTime":1753824901634,"endTime":1753824901645,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/factory.test.ts"},{"assertionResults":[{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export MarkdownDocsViewer","status":"passed","title":"should export MarkdownDocsViewer","duration":2,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export themes","status":"passed","title":"should export themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export factory functions","status":"passed","title":"should export factory functions","duration":1,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export error handling utilities","status":"passed","title":"should export error handling utilities","duration":0,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export performance utilities","status":"passed","title":"should export performance utilities","duration":1,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export search manager","status":"passed","title":"should export search manager","duration":0,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export export utilities","status":"passed","title":"should export export utilities","duration":1,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export i18n utilities","status":"passed","title":"should export i18n utilities","duration":0,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export table of contents utilities","status":"passed","title":"should export table of contents utilities","duration":0,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export advanced search","status":"passed","title":"should export advanced search","duration":1,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export print utilities","status":"passed","title":"should export print utilities","duration":0,"failureMessages":[]},{"ancestorTitles":["","Index Exports"],"fullName":" Index Exports should export type definitions","status":"passed","title":"should export type definitions","duration":0,"failureMessages":[]}],"startTime":1753824901613,"endTime":1753824901620,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/index.test.ts"},{"assertionResults":[{"ancestorTitles":["","DocumentLoader","Constructor"],"fullName":" DocumentLoader Constructor should initialize with default configuration","status":"passed","title":"should initialize with default configuration","duration":3,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Constructor"],"fullName":" DocumentLoader Constructor should initialize with custom cache size","status":"passed","title":"should initialize with custom cache size","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Constructor"],"fullName":" DocumentLoader Constructor should initialize with custom logger","status":"passed","title":"should initialize with custom logger","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadAll"],"fullName":" DocumentLoader loadAll should return all documents","status":"passed","title":"should return all documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadAll"],"fullName":" DocumentLoader loadAll should handle errors and return empty array","status":"passed","title":"should handle errors and return empty array","duration":9,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadAll"],"fullName":" DocumentLoader loadAll should validate source configuration","status":"passed","title":"should validate source configuration","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should load document with content","status":"passed","title":"should load document with content","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should load document from cache if available","status":"passed","title":"should load document from cache if available","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should handle loading promise deduplication","status":"passed","title":"should handle loading promise deduplication","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should handle document without content or file","status":"passed","title":"should handle document without content or file","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadDocument"],"fullName":" DocumentLoader loadDocument should check memory usage after loading","status":"passed","title":"should check memory usage after loading","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromSource"],"fullName":" DocumentLoader loadFromSource should dispatch to correct loader based on source type","status":"passed","title":"should dispatch to correct loader based on source type","duration":9,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromSource"],"fullName":" DocumentLoader loadFromSource should throw error for content source trying to load from path","status":"passed","title":"should throw error for content source trying to load from path","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromSource"],"fullName":" DocumentLoader loadFromSource should throw error for unknown source type","status":"passed","title":"should throw error for unknown source type","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should load local file successfully","status":"passed","title":"should load local file successfully","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should handle 404 error","status":"passed","title":"should handle 404 error","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should handle network errors","status":"passed","title":"should handle network errors","duration":3006,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadLocal"],"fullName":" DocumentLoader loadLocal should handle other fetch errors","status":"passed","title":"should handle other fetch errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should load from URL with baseUrl","status":"passed","title":"should load from URL with baseUrl","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should handle 401/403 errors","status":"passed","title":"should handle 401/403 errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should handle rate limiting (429)","status":"passed","title":"should handle rate limiting (429)","duration":3005,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromUrl"],"fullName":" DocumentLoader loadFromUrl should include custom headers","status":"passed","title":"should include custom headers","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should load from GitHub successfully","status":"passed","title":"should load from GitHub successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle invalid GitHub path format","status":"passed","title":"should handle invalid GitHub path format","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle GitHub API rate limiting","status":"passed","title":"should handle GitHub API rate limiting","duration":3003,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle directory response","status":"passed","title":"should handle directory response","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should handle missing content in response","status":"passed","title":"should handle missing content in response","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","loadFromGithub"],"fullName":" DocumentLoader loadFromGithub should use default branch when not specified","status":"passed","title":"should use default branch when not specified","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should clear cache","status":"passed","title":"should clear cache","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should get cache size","status":"passed","title":"should get cache size","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should check if document is cached","status":"passed","title":"should check if document is cached","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Cache Management"],"fullName":" DocumentLoader Cache Management should get cache stats","status":"passed","title":"should get cache stats","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should get performance metrics","status":"passed","title":"should get performance metrics","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should update retry configuration","status":"passed","title":"should update retry configuration","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should destroy and cleanup resources","status":"passed","title":"should destroy and cleanup resources","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should preload documents","status":"passed","title":"should preload documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should skip preloading cached documents","status":"passed","title":"should skip preloading cached documents","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Performance and Utility Methods"],"fullName":" DocumentLoader Performance and Utility Methods should handle preload errors gracefully","status":"passed","title":"should handle preload errors gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should validate missing source","status":"passed","title":"should validate missing source","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should validate empty documents","status":"passed","title":"should validate empty documents","duration":3,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should warn about URL source without baseUrl","status":"passed","title":"should warn about URL source without baseUrl","duration":1,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Source Validation"],"fullName":" DocumentLoader Source Validation should warn about content source with missing content","status":"passed","title":"should warn about content source with missing content","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Error Handling with Retry"],"fullName":" DocumentLoader Error Handling with Retry should handle retryable errors","status":"passed","title":"should handle retryable errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","DocumentLoader","Error Handling with Retry"],"fullName":" DocumentLoader Error Handling with Retry should respect custom retry config","status":"passed","title":"should respect custom retry config","duration":1,"failureMessages":[]}],"startTime":1753824900169,"endTime":1753824909237,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/loader.test.ts"},{"assertionResults":[{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete vscode theme definition","status":"passed","title":"should have complete vscode theme definition","duration":3,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for vscode","status":"passed","title":"should have valid color values for vscode","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete nord theme definition","status":"passed","title":"should have complete nord theme definition","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for nord","status":"passed","title":"should have valid color values for nord","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete dracula theme definition","status":"passed","title":"should have complete dracula theme definition","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for dracula","status":"passed","title":"should have valid color values for dracula","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete solarized theme definition","status":"passed","title":"should have complete solarized theme definition","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for solarized","status":"passed","title":"should have valid color values for solarized","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete monokai theme definition","status":"passed","title":"should have complete monokai theme definition","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for monokai","status":"passed","title":"should have valid color values for monokai","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete ayu theme definition","status":"passed","title":"should have complete ayu theme definition","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for ayu","status":"passed","title":"should have valid color values for ayu","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete catppuccin theme definition","status":"passed","title":"should have complete catppuccin theme definition","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for catppuccin","status":"passed","title":"should have valid color values for catppuccin","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have complete tokyo theme definition","status":"passed","title":"should have complete tokyo theme definition","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Base Themes Structure"],"fullName":" New Theme Integration Base Themes Structure should have valid color values for tokyo","status":"passed","title":"should have valid color values for tokyo","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Generation"],"fullName":" New Theme Integration Theme Generation should generate all theme variants including new themes","status":"passed","title":"should generate all theme variants including new themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Generation"],"fullName":" New Theme Integration Theme Generation should have proper theme structure for all variants","status":"passed","title":"should have proper theme structure for all variants","duration":3,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Manager Integration"],"fullName":" New Theme Integration Theme Manager Integration should register all new themes in ThemeManager","status":"passed","title":"should register all new themes in ThemeManager","duration":2,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Manager Integration"],"fullName":" New Theme Integration Theme Manager Integration should be able to set new themes","status":"passed","title":"should be able to set new themes","duration":21,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Utilities"],"fullName":" New Theme Integration Theme Utilities should correctly extract base names from new theme names","status":"passed","title":"should correctly extract base names from new theme names","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Utilities"],"fullName":" New Theme Integration Theme Utilities should correctly extract modes from new theme names","status":"passed","title":"should correctly extract modes from new theme names","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Color Accessibility"],"fullName":" New Theme Integration Theme Color Accessibility should have good contrast between text and background for all new themes","status":"passed","title":"should have good contrast between text and background for all new themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Font Families"],"fullName":" New Theme Integration Theme Font Families should have appropriate font families for each theme","status":"passed","title":"should have appropriate font families for each theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Font Families"],"fullName":" New Theme Integration Theme Font Families should have theme-specific fonts where appropriate","status":"passed","title":"should have theme-specific fonts where appropriate","duration":1,"failureMessages":[]},{"ancestorTitles":["","New Theme Integration","Theme Descriptions"],"fullName":" New Theme Integration Theme Descriptions should have meaningful descriptions for all new themes","status":"passed","title":"should have meaningful descriptions for all new themes","duration":1,"failureMessages":[]}],"startTime":1753824901321,"endTime":1753824901366,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/new-themes.test.ts"},{"assertionResults":[{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should store and retrieve values","status":"passed","title":"should store and retrieve values","duration":2,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should return undefined for non-existent keys","status":"passed","title":"should return undefined for non-existent keys","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should respect capacity limits","status":"passed","title":"should respect capacity limits","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should update LRU order on access","status":"passed","title":"should update LRU order on access","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should provide cache statistics","status":"passed","title":"should provide cache statistics","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should clear all entries","status":"passed","title":"should clear all entries","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should delete specific entries","status":"passed","title":"should delete specific entries","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LRUCache"],"fullName":" Performance Optimizations LRUCache should estimate memory usage","status":"passed","title":"should estimate memory usage","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should function as LRU cache when localStorage is available","status":"passed","title":"should function as LRU cache when localStorage is available","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should attempt to save to localStorage","status":"passed","title":"should attempt to save to localStorage","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should attempt to clear localStorage on clear","status":"passed","title":"should attempt to clear localStorage on clear","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PersistentCache"],"fullName":" Performance Optimizations PersistentCache should handle localStorage errors gracefully","status":"passed","title":"should handle localStorage errors gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should index documents and enable search","status":"passed","title":"should index documents and enable search","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should search in titles with high priority","status":"passed","title":"should search in titles with high priority","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should search in tags when enabled","status":"passed","title":"should search in tags when enabled","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should respect case sensitivity option","status":"passed","title":"should respect case sensitivity option","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should limit search results","status":"passed","title":"should limit search results","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should perform fuzzy search when enabled","status":"passed","title":"should perform fuzzy search when enabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should cache search results","status":"passed","title":"should cache search results","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should filter out stop words","status":"passed","title":"should filter out stop words","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","SearchIndex"],"fullName":" Performance Optimizations SearchIndex should handle empty search queries","status":"passed","title":"should handle empty search queries","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","Debounce"],"fullName":" Performance Optimizations Debounce should delay function execution","status":"passed","title":"should delay function execution","duration":23,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","Debounce"],"fullName":" Performance Optimizations Debounce should cancel previous calls","status":"passed","title":"should cancel previous calls","duration":21,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","Throttle"],"fullName":" Performance Optimizations Throttle should limit function calls","status":"passed","title":"should limit function calls","duration":25,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should observe elements for intersection","status":"passed","title":"should observe elements for intersection","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should execute callback when element intersects","status":"passed","title":"should execute callback when element intersects","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should not observe already loaded elements","status":"passed","title":"should not observe already loaded elements","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should unobserve elements","status":"passed","title":"should unobserve elements","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","LazyLoader"],"fullName":" Performance Optimizations LazyLoader should cleanup all observers","status":"passed","title":"should cleanup all observers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should be a singleton","status":"passed","title":"should be a singleton","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should add and execute cleanup tasks","status":"passed","title":"should add and execute cleanup tasks","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should remove cleanup tasks","status":"passed","title":"should remove cleanup tasks","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should handle cleanup task errors gracefully","status":"passed","title":"should handle cleanup task errors gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should check memory usage when performance.memory is available","status":"passed","title":"should check memory usage when performance.memory is available","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","MemoryManager"],"fullName":" Performance Optimizations MemoryManager should return memory stats when available","status":"passed","title":"should return memory stats when available","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should measure timing metrics","status":"passed","title":"should measure timing metrics","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should record multiple measurements","status":"passed","title":"should record multiple measurements","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should limit stored measurements","status":"passed","title":"should limit stored measurements","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should return all metrics","status":"passed","title":"should return all metrics","duration":1,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should clear all metrics","status":"passed","title":"should clear all metrics","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should handle non-existent metrics gracefully","status":"passed","title":"should handle non-existent metrics gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","Performance Optimizations","PerformanceMonitor"],"fullName":" Performance Optimizations PerformanceMonitor should cleanup observers","status":"passed","title":"should cleanup observers","duration":1,"failureMessages":[]}],"startTime":1753824900159,"endTime":1753824900248,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/performance.test.ts"},{"assertionResults":[{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should initialize with hash mode","status":"passed","title":"should initialize with hash mode","duration":10,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should initialize with memory mode","status":"passed","title":"should initialize with memory mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should initialize with none mode","status":"passed","title":"should initialize with none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should handle initial hash on construction","status":"passed","title":"should handle initial hash on construction","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Constructor"],"fullName":" Router Constructor should not trigger route change for empty initial hash","status":"passed","title":"should not trigger route change for empty initial hash","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should set hash when in hash mode","status":"passed","title":"should set hash when in hash mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should not set hash when in memory mode","status":"passed","title":"should not set hash when in memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should not set hash when in none mode","status":"passed","title":"should not set hash when in none mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should update current route in memory mode","status":"passed","title":"should update current route in memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should update current route in none mode","status":"passed","title":"should update current route in none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","setRoute"],"fullName":" Router setRoute should update current route in hash mode","status":"skipped","title":"should update current route in hash mode","failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return hash value in hash mode","status":"passed","title":"should return hash value in hash mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return null for empty hash in hash mode","status":"passed","title":"should return null for empty hash in hash mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return current route in memory mode","status":"passed","title":"should return current route in memory mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return null when no route set in memory mode","status":"passed","title":"should return null when no route set in memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","getCurrentRoute"],"fullName":" Router getCurrentRoute should return current route in none mode","status":"passed","title":"should return current route in none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should handle hash change events","status":"passed","title":"should handle hash change events","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should not trigger route change for same hash","status":"passed","title":"should not trigger route change for same hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should not trigger route change for empty hash","status":"passed","title":"should not trigger route change for empty hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Hash change handling"],"fullName":" Router Hash change handling should track current route correctly","status":"passed","title":"should track current route correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should remove event listener in hash mode","status":"passed","title":"should remove event listener in hash mode","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should not remove event listener in memory mode","status":"passed","title":"should not remove event listener in memory mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should not remove event listener in none mode","status":"passed","title":"should not remove event listener in none mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","destroy"],"fullName":" Router destroy should stop responding to hash changes after destroy","status":"passed","title":"should stop responding to hash changes after destroy","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle special characters in hash","status":"passed","title":"should handle special characters in hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle encoded characters in hash","status":"passed","title":"should handle encoded characters in hash","duration":0,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle rapid route changes","status":"passed","title":"should handle rapid route changes","duration":1,"failureMessages":[]},{"ancestorTitles":["","Router","Edge cases"],"fullName":" Router Edge cases should handle setting same route multiple times","status":"passed","title":"should handle setting same route multiple times","duration":0,"failureMessages":[]}],"startTime":1753824901389,"endTime":1753824901411,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/router.test.ts"},{"assertionResults":[{"ancestorTitles":["","createSearch"],"fullName":" createSearch should create search HTML with default placeholder","status":"passed","title":"should create search HTML with default placeholder","duration":2,"failureMessages":[]},{"ancestorTitles":["","createSearch"],"fullName":" createSearch should create search HTML with custom placeholder","status":"passed","title":"should create search HTML with custom placeholder","duration":1,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Constructor"],"fullName":" SearchManager Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":6,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Constructor"],"fullName":" SearchManager Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":4,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Constructor"],"fullName":" SearchManager Constructor should create debounced search function","status":"passed","title":"should create debounced search function","duration":4,"failureMessages":[]},{"ancestorTitles":["","SearchManager","updateIndex"],"fullName":" SearchManager updateIndex should update search index with documents and content","status":"passed","title":"should update search index with documents and content","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","attachToDOM"],"fullName":" SearchManager attachToDOM should attach event listeners to search input","status":"passed","title":"should attach event listeners to search input","duration":10,"failureMessages":[]},{"ancestorTitles":["","SearchManager","attachToDOM"],"fullName":" SearchManager attachToDOM should hide search results initially","status":"passed","title":"should hide search results initially","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","attachToDOM"],"fullName":" SearchManager attachToDOM should handle missing search container","status":"passed","title":"should handle missing search container","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should trigger search on input after 2 characters","status":"passed","title":"should trigger search on input after 2 characters","duration":24,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should not trigger search for single character","status":"passed","title":"should not trigger search for single character","duration":28,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should hide results when input is cleared","status":"passed","title":"should hide results when input is cleared","duration":5,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search input handling"],"fullName":" SearchManager Search input handling should trim whitespace from query","status":"passed","title":"should trim whitespace from query","duration":31,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should navigate down through results","status":"passed","title":"should navigate down through results","duration":3,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should navigate up through results","status":"passed","title":"should navigate up through results","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should wrap around when navigating","status":"passed","title":"should wrap around when navigating","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should select result on Enter key","status":"passed","title":"should select result on Enter key","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Keyboard navigation"],"fullName":" SearchManager Keyboard navigation should hide results on Escape key","status":"passed","title":"should hide results on Escape key","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should render search results","status":"passed","title":"should render search results","duration":23,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should render no results message","status":"passed","title":"should render no results message","duration":33,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should highlight search query in results","status":"passed","title":"should highlight search query in results","duration":26,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search results rendering"],"fullName":" SearchManager Search results rendering should render document with all fields","status":"passed","title":"should render document with all fields","duration":23,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Focus and blur handling"],"fullName":" SearchManager Focus and blur handling should perform search on focus if query exists","status":"passed","title":"should perform search on focus if query exists","duration":46,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Focus and blur handling"],"fullName":" SearchManager Focus and blur handling should hide results on blur with delay","status":"passed","title":"should hide results on blur with delay","duration":207,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Public methods"],"fullName":" SearchManager Public methods should clear search","status":"passed","title":"should clear search","duration":1,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Public methods"],"fullName":" SearchManager Public methods should set documents for selection","status":"passed","title":"should set documents for selection","duration":29,"failureMessages":[]},{"ancestorTitles":["","SearchManager","destroy"],"fullName":" SearchManager destroy should remove event listeners","status":"passed","title":"should remove event listeners","duration":2,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search options"],"fullName":" SearchManager Search options should pass search options to index","status":"passed","title":"should pass search options to index","duration":29,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Search options"],"fullName":" SearchManager Search options should use default maxResults if not specified","status":"passed","title":"should use default maxResults if not specified","duration":28,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Mouse interactions"],"fullName":" SearchManager Mouse interactions should activate result on mouse enter","status":"passed","title":"should activate result on mouse enter","duration":24,"failureMessages":[]},{"ancestorTitles":["","SearchManager","Mouse interactions"],"fullName":" SearchManager Mouse interactions should select result on click","status":"passed","title":"should select result on click","duration":28,"failureMessages":[]}],"startTime":1753824900168,"endTime":1753824900804,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/search.test.ts"},{"assertionResults":[{"ancestorTitles":["","ThemeBuilder","Constructor"],"fullName":" ThemeBuilder Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":8,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Constructor"],"fullName":" ThemeBuilder Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Constructor"],"fullName":" ThemeBuilder Constructor should copy current theme as starting point","status":"passed","title":"should copy current theme as starting point","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should render theme builder HTML with all sections","status":"passed","title":"should render theme builder HTML with all sections","duration":4,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should include all color input categories","status":"passed","title":"should include all color input categories","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should include all action buttons by default","status":"passed","title":"should include all action buttons by default","duration":4,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should hide import/export buttons when disabled","status":"passed","title":"should hide import/export buttons when disabled","duration":10,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should hide preview when disabled","status":"passed","title":"should hide preview when disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should hide accessibility check when disabled","status":"passed","title":"should hide accessibility check when disabled","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should render font inputs","status":"passed","title":"should render font inputs","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should render spacing inputs","status":"passed","title":"should render spacing inputs","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","render"],"fullName":" ThemeBuilder render should render base theme options","status":"passed","title":"should render base theme options","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Color inputs rendering"],"fullName":" ThemeBuilder Color inputs rendering should render all required color inputs","status":"passed","title":"should render all required color inputs","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Color inputs rendering"],"fullName":" ThemeBuilder Color inputs rendering should group colors by category","status":"passed","title":"should group colors by category","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Color inputs rendering"],"fullName":" ThemeBuilder Color inputs rendering should include color descriptions","status":"passed","title":"should include color descriptions","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Preview rendering"],"fullName":" ThemeBuilder Preview rendering should render preview with sample content","status":"passed","title":"should render preview with sample content","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Preview rendering"],"fullName":" ThemeBuilder Preview rendering should apply theme colors to preview elements","status":"passed","title":"should apply theme colors to preview elements","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Preview rendering"],"fullName":" ThemeBuilder Preview rendering should render primary and secondary buttons","status":"passed","title":"should render primary and secondary buttons","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Accessibility check rendering"],"fullName":" ThemeBuilder Accessibility check rendering should render contrast ratio checks","status":"passed","title":"should render contrast ratio checks","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Accessibility check rendering"],"fullName":" ThemeBuilder Accessibility check rendering should show pass/fail indicators","status":"passed","title":"should show pass/fail indicators","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","open and close"],"fullName":" ThemeBuilder open and close should open the theme builder","status":"passed","title":"should open the theme builder","duration":81,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","open and close"],"fullName":" ThemeBuilder open and close should close the theme builder","status":"passed","title":"should close the theme builder","duration":75,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","open and close"],"fullName":" ThemeBuilder open and close should call onClose callback when closed","status":"passed","title":"should call onClose callback when closed","duration":32,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","attachTo and event listeners"],"fullName":" ThemeBuilder attachTo and event listeners should close when close button is clicked","status":"passed","title":"should close when close button is clicked","duration":32,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","attachTo and event listeners"],"fullName":" ThemeBuilder attachTo and event listeners should close when overlay is clicked","status":"passed","title":"should close when overlay is clicked","duration":53,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","attachTo and event listeners"],"fullName":" ThemeBuilder attachTo and event listeners should not close when clicking inside the builder","status":"passed","title":"should not close when clicking inside the builder","duration":37,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","attachTo and event listeners"],"fullName":" ThemeBuilder attachTo and event listeners should close on Escape key","status":"passed","title":"should close on Escape key","duration":56,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","attachTo and event listeners"],"fullName":" ThemeBuilder attachTo and event listeners should not close on Escape when not open","status":"passed","title":"should not close on Escape when not open","duration":20,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Color input interactions"],"fullName":" ThemeBuilder Color input interactions should update color when color input changes","status":"passed","title":"should update color when color input changes","duration":27,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Color input interactions"],"fullName":" ThemeBuilder Color input interactions should update color when text input changes with valid color","status":"passed","title":"should update color when text input changes with valid color","duration":26,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Color input interactions"],"fullName":" ThemeBuilder Color input interactions should not update with invalid color format","status":"passed","title":"should not update with invalid color format","duration":16,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Font input interactions"],"fullName":" ThemeBuilder Font input interactions should update font when input changes","status":"passed","title":"should update font when input changes","duration":21,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Spacing input interactions"],"fullName":" ThemeBuilder Spacing input interactions should update spacing when inputs change","status":"passed","title":"should update spacing when inputs change","duration":25,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Theme name and border radius"],"fullName":" ThemeBuilder Theme name and border radius should update theme name","status":"passed","title":"should update theme name","duration":20,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Theme name and border radius"],"fullName":" ThemeBuilder Theme name and border radius should update border radius","status":"passed","title":"should update border radius","duration":31,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Base theme selection"],"fullName":" ThemeBuilder Base theme selection should load different base theme when selected","status":"passed","title":"should load different base theme when selected","duration":29,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Action buttons"],"fullName":" ThemeBuilder Action buttons should save theme when save button is clicked","status":"passed","title":"should save theme when save button is clicked","duration":36,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Action buttons"],"fullName":" ThemeBuilder Action buttons should reset theme when reset button is clicked","status":"passed","title":"should reset theme when reset button is clicked","duration":34,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Action buttons"],"fullName":" ThemeBuilder Action buttons should handle export theme","status":"passed","title":"should handle export theme","duration":31,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Action buttons"],"fullName":" ThemeBuilder Action buttons should handle import theme","status":"passed","title":"should handle import theme","duration":17,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Utility methods"],"fullName":" ThemeBuilder Utility methods should validate colors correctly","status":"passed","title":"should validate colors correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Utility methods"],"fullName":" ThemeBuilder Utility methods should convert camelCase to kebab-case","status":"passed","title":"should convert camelCase to kebab-case","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","getStyles"],"fullName":" ThemeBuilder getStyles should return CSS styles string","status":"passed","title":"should return CSS styles string","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","getStyles"],"fullName":" ThemeBuilder getStyles should include mobile responsive styles","status":"passed","title":"should include mobile responsive styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","getStyles"],"fullName":" ThemeBuilder getStyles should include accessibility styles","status":"passed","title":"should include accessibility styles","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","getStyles"],"fullName":" ThemeBuilder getStyles should include color input styles","status":"passed","title":"should include color input styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","getStyles"],"fullName":" ThemeBuilder getStyles should include button styles","status":"passed","title":"should include button styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","getStyles"],"fullName":" ThemeBuilder getStyles should include preview styles","status":"passed","title":"should include preview styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Edge cases"],"fullName":" ThemeBuilder Edge cases should handle missing container gracefully","status":"passed","title":"should handle missing container gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Edge cases"],"fullName":" ThemeBuilder Edge cases should handle missing DOM elements gracefully","status":"passed","title":"should handle missing DOM elements gracefully","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Edge cases"],"fullName":" ThemeBuilder Edge cases should handle file import errors gracefully","status":"passed","title":"should handle file import errors gracefully","duration":45,"failureMessages":[]},{"ancestorTitles":["","ThemeBuilder","Edge cases"],"fullName":" ThemeBuilder Edge cases should handle theme creation without onThemeCreate callback","status":"passed","title":"should handle theme creation without onThemeCreate callback","duration":15,"failureMessages":[]}],"startTime":1753824900174,"endTime":1753824901008,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/theme-builder.test.ts"},{"assertionResults":[{"ancestorTitles":["","ThemeManager","Constructor"],"fullName":" ThemeManager Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":7,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Constructor"],"fullName":" ThemeManager Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Constructor"],"fullName":" ThemeManager Constructor should load saved theme from localStorage","status":"passed","title":"should load saved theme from localStorage","duration":4,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Constructor"],"fullName":" ThemeManager Constructor should fall back to default theme if saved theme not found","status":"passed","title":"should fall back to default theme if saved theme not found","duration":3,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Constructor"],"fullName":" ThemeManager Constructor should use custom storage key","status":"passed","title":"should use custom storage key","duration":3,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Built-in themes"],"fullName":" ThemeManager Built-in themes should have all expected built-in themes","status":"passed","title":"should have all expected built-in themes","duration":9,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Built-in themes"],"fullName":" ThemeManager Built-in themes should have proper theme structure for all built-in themes","status":"passed","title":"should have proper theme structure for all built-in themes","duration":3,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","registerTheme"],"fullName":" ThemeManager registerTheme should register a custom theme","status":"passed","title":"should register a custom theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","registerTheme"],"fullName":" ThemeManager registerTheme should allow overriding existing themes","status":"passed","title":"should allow overriding existing themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should set theme and return the theme object","status":"passed","title":"should set theme and return the theme object","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should return null for non-existent theme","status":"passed","title":"should return null for non-existent theme","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should save theme to localStorage when persistence enabled","status":"passed","title":"should save theme to localStorage when persistence enabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should not save theme when persistence disabled","status":"passed","title":"should not save theme when persistence disabled","duration":3,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should call onThemeChange callback","status":"passed","title":"should call onThemeChange callback","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should apply CSS variables","status":"passed","title":"should apply CSS variables","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","setTheme"],"fullName":" ThemeManager setTheme should handle localStorage errors gracefully","status":"passed","title":"should handle localStorage errors gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","getCurrentTheme"],"fullName":" ThemeManager getCurrentTheme should return current theme","status":"passed","title":"should return current theme","duration":3,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","getAvailableThemes"],"fullName":" ThemeManager getAvailableThemes should return all registered themes","status":"passed","title":"should return all registered themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","getAvailableThemes"],"fullName":" ThemeManager getAvailableThemes should include custom themes","status":"passed","title":"should include custom themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","getTheme"],"fullName":" ThemeManager getTheme should return theme by name","status":"passed","title":"should return theme by name","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","getTheme"],"fullName":" ThemeManager getTheme should return undefined for non-existent theme","status":"passed","title":"should return undefined for non-existent theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","createCustomTheme"],"fullName":" ThemeManager createCustomTheme should create custom theme based on current theme","status":"passed","title":"should create custom theme based on current theme","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","createCustomTheme"],"fullName":" ThemeManager createCustomTheme should merge all properties correctly","status":"passed","title":"should merge all properties correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","createCustomTheme"],"fullName":" ThemeManager createCustomTheme should register the custom theme","status":"passed","title":"should register the custom theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","applyCSSVariables"],"fullName":" ThemeManager applyCSSVariables should apply all color variables","status":"passed","title":"should apply all color variables","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","applyCSSVariables"],"fullName":" ThemeManager applyCSSVariables should apply RGB versions of colors","status":"passed","title":"should apply RGB versions of colors","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","applyCSSVariables"],"fullName":" ThemeManager applyCSSVariables should apply font variables","status":"passed","title":"should apply font variables","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","applyCSSVariables"],"fullName":" ThemeManager applyCSSVariables should apply spacing variables","status":"passed","title":"should apply spacing variables","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","applyCSSVariables"],"fullName":" ThemeManager applyCSSVariables should apply border radius","status":"passed","title":"should apply border radius","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","applyCSSVariables"],"fullName":" ThemeManager applyCSSVariables should set theme data attribute","status":"passed","title":"should set theme data attribute","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","getContrastRatio"],"fullName":" ThemeManager Color utility methods getContrastRatio should calculate contrast ratio correctly","status":"passed","title":"should calculate contrast ratio correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","getContrastRatio"],"fullName":" ThemeManager Color utility methods getContrastRatio should handle same colors","status":"passed","title":"should handle same colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","getContrastRatio"],"fullName":" ThemeManager Color utility methods getContrastRatio should be symmetric","status":"passed","title":"should be symmetric","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","isAccessible"],"fullName":" ThemeManager Color utility methods isAccessible should return true for high contrast combinations (AA)","status":"passed","title":"should return true for high contrast combinations (AA)","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","isAccessible"],"fullName":" ThemeManager Color utility methods isAccessible should return false for low contrast combinations (AA)","status":"passed","title":"should return false for low contrast combinations (AA)","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","isAccessible"],"fullName":" ThemeManager Color utility methods isAccessible should use AA standard by default","status":"passed","title":"should use AA standard by default","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Color utility methods","isAccessible"],"fullName":" ThemeManager Color utility methods isAccessible should apply AAA standard correctly","status":"passed","title":"should apply AAA standard correctly","duration":3,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Theme import/export","exportTheme"],"fullName":" ThemeManager Theme import/export exportTheme should export theme as JSON string","status":"passed","title":"should export theme as JSON string","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Theme import/export","exportTheme"],"fullName":" ThemeManager Theme import/export exportTheme should format JSON nicely","status":"passed","title":"should format JSON nicely","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Theme import/export","importTheme"],"fullName":" ThemeManager Theme import/export importTheme should import valid theme JSON","status":"passed","title":"should import valid theme JSON","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Theme import/export","importTheme"],"fullName":" ThemeManager Theme import/export importTheme should return null for invalid JSON","status":"passed","title":"should return null for invalid JSON","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Theme import/export","importTheme"],"fullName":" ThemeManager Theme import/export importTheme should validate theme structure","status":"passed","title":"should validate theme structure","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Theme import/export","importTheme"],"fullName":" ThemeManager Theme import/export importTheme should validate required colors","status":"passed","title":"should validate required colors","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Persistence edge cases"],"fullName":" ThemeManager Persistence edge cases should handle missing localStorage gracefully","status":"passed","title":"should handle missing localStorage gracefully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Persistence edge cases"],"fullName":" ThemeManager Persistence edge cases should handle localStorage getItem errors","status":"passed","title":"should handle localStorage getItem errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Utility methods"],"fullName":" ThemeManager Utility methods should convert camelCase to kebab-case","status":"passed","title":"should convert camelCase to kebab-case","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeManager","Utility methods"],"fullName":" ThemeManager Utility methods should handle hex to RGB conversion","status":"passed","title":"should handle hex to RGB conversion","duration":1,"failureMessages":[]}],"startTime":1753824900173,"endTime":1753824900259,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/theme-manager.test.ts"},{"assertionResults":[{"ancestorTitles":["","ThemeSwitcher","Constructor"],"fullName":" ThemeSwitcher Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":9,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","Constructor"],"fullName":" ThemeSwitcher Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should render theme switcher HTML with default options","status":"passed","title":"should render theme switcher HTML with default options","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should render floating switcher when position is floating","status":"passed","title":"should render floating switcher when position is floating","duration":2,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should hide custom theme button when allowCustomThemes is false","status":"passed","title":"should hide custom theme button when allowCustomThemes is false","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should render all available themes as options","status":"passed","title":"should render all available themes as options","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should mark current theme as active","status":"passed","title":"should mark current theme as active","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should show theme descriptions when enabled","status":"passed","title":"should show theme descriptions when enabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should hide theme descriptions when disabled","status":"passed","title":"should hide theme descriptions when disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should show theme preview when enabled","status":"passed","title":"should show theme preview when enabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should hide theme preview when disabled","status":"passed","title":"should hide theme preview when disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should use appropriate theme icons","status":"passed","title":"should use appropriate theme icons","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","render"],"fullName":" ThemeSwitcher render should handle theme without description","status":"passed","title":"should handle theme without description","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","attachTo"],"fullName":" ThemeSwitcher attachTo should attach to container and setup event listeners","status":"passed","title":"should attach to container and setup event listeners","duration":41,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","attachTo"],"fullName":" ThemeSwitcher attachTo should handle missing trigger gracefully","status":"passed","title":"should handle missing trigger gracefully","duration":8,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","dropdown functionality"],"fullName":" ThemeSwitcher dropdown functionality should toggle dropdown when trigger is clicked","status":"passed","title":"should toggle dropdown when trigger is clicked","duration":10,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","dropdown functionality"],"fullName":" ThemeSwitcher dropdown functionality should close dropdown when clicking outside","status":"passed","title":"should close dropdown when clicking outside","duration":10,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","dropdown functionality"],"fullName":" ThemeSwitcher dropdown functionality should not close dropdown when clicking inside","status":"passed","title":"should not close dropdown when clicking inside","duration":6,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","dropdown functionality"],"fullName":" ThemeSwitcher dropdown functionality should prevent event bubbling on trigger click","status":"passed","title":"should prevent event bubbling on trigger click","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme selection"],"fullName":" ThemeSwitcher theme selection should select theme when option is clicked","status":"passed","title":"should select theme when option is clicked","duration":8,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme selection"],"fullName":" ThemeSwitcher theme selection should close dropdown after selecting theme","status":"passed","title":"should close dropdown after selecting theme","duration":6,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme selection"],"fullName":" ThemeSwitcher theme selection should call onThemeChange callback when theme is selected","status":"passed","title":"should call onThemeChange callback when theme is selected","duration":30,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme selection"],"fullName":" ThemeSwitcher theme selection should update UI after theme selection","status":"passed","title":"should update UI after theme selection","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme selection"],"fullName":" ThemeSwitcher theme selection should handle theme selection when setTheme returns null","status":"passed","title":"should handle theme selection when setTheme returns null","duration":7,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme selection"],"fullName":" ThemeSwitcher theme selection should ignore clicks on non-theme elements","status":"passed","title":"should ignore clicks on non-theme elements","duration":6,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","custom theme button"],"fullName":" ThemeSwitcher custom theme button should handle custom theme button click","status":"passed","title":"should handle custom theme button click","duration":94,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","custom theme button"],"fullName":" ThemeSwitcher custom theme button should close dropdown when custom theme button is clicked","status":"passed","title":"should close dropdown when custom theme button is clicked","duration":63,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should navigate down with ArrowDown key","status":"passed","title":"should navigate down with ArrowDown key","duration":31,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should navigate up with ArrowUp key","status":"passed","title":"should navigate up with ArrowUp key","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should wrap around at the end with ArrowDown","status":"passed","title":"should wrap around at the end with ArrowDown","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should select theme with Enter key","status":"passed","title":"should select theme with Enter key","duration":4,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should select theme with Space key","status":"passed","title":"should select theme with Space key","duration":5,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should close dropdown with Escape key","status":"passed","title":"should close dropdown with Escape key","duration":8,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should not respond to keyboard when dropdown is closed","status":"passed","title":"should not respond to keyboard when dropdown is closed","duration":13,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","keyboard navigation"],"fullName":" ThemeSwitcher keyboard navigation should handle keyboard navigation when no option is focused","status":"passed","title":"should handle keyboard navigation when no option is focused","duration":4,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme icons"],"fullName":" ThemeSwitcher theme icons should return correct icons for known themes","status":"passed","title":"should return correct icons for known themes","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","theme icons"],"fullName":" ThemeSwitcher theme icons should return default icon for unknown themes","status":"passed","title":"should return default icon for unknown themes","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","getStyles"],"fullName":" ThemeSwitcher getStyles should return CSS styles string","status":"passed","title":"should return CSS styles string","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","getStyles"],"fullName":" ThemeSwitcher getStyles should include floating styles","status":"passed","title":"should include floating styles","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","getStyles"],"fullName":" ThemeSwitcher getStyles should include mobile responsive styles","status":"passed","title":"should include mobile responsive styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","getStyles"],"fullName":" ThemeSwitcher getStyles should include dropdown animation styles","status":"passed","title":"should include dropdown animation styles","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","getStyles"],"fullName":" ThemeSwitcher getStyles should include preview styles","status":"passed","title":"should include preview styles","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","edge cases"],"fullName":" ThemeSwitcher edge cases should handle empty themes array","status":"passed","title":"should handle empty themes array","duration":0,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","edge cases"],"fullName":" ThemeSwitcher edge cases should handle theme without colors for preview","status":"passed","title":"should handle theme without colors for preview","duration":1,"failureMessages":[]},{"ancestorTitles":["","ThemeSwitcher","edge cases"],"fullName":" ThemeSwitcher edge cases should handle missing DOM elements gracefully","status":"passed","title":"should handle missing DOM elements gracefully","duration":1,"failureMessages":[]}],"startTime":1753824900191,"endTime":1753824900612,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/theme-switcher.test.ts"},{"assertionResults":[{"ancestorTitles":["","Themes","themes.default.light"],"fullName":" Themes themes.default.light should have all required color properties","status":"passed","title":"should have all required color properties","duration":2,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.light"],"fullName":" Themes themes.default.light should have valid CSS color values","status":"passed","title":"should have valid CSS color values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.light"],"fullName":" Themes themes.default.light should have all required font properties","status":"passed","title":"should have all required font properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.light"],"fullName":" Themes themes.default.light should have valid font stacks","status":"passed","title":"should have valid font stacks","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.dark"],"fullName":" Themes themes.default.dark should have all required color properties","status":"passed","title":"should have all required color properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.dark"],"fullName":" Themes themes.default.dark should have different colors from default theme","status":"passed","title":"should have different colors from default theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.dark"],"fullName":" Themes themes.default.dark should have dark background colors","status":"passed","title":"should have dark background colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.dark"],"fullName":" Themes themes.default.dark should have light text colors for contrast","status":"passed","title":"should have light text colors for contrast","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","themes.default.dark"],"fullName":" Themes themes.default.dark should have same font structure as default theme","status":"passed","title":"should have same font structure as default theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","Theme Validation"],"fullName":" Themes Theme Validation should have consistent structure between themes","status":"passed","title":"should have consistent structure between themes","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Theme Validation"],"fullName":" Themes Theme Validation should have valid CSS units for spacing if present","status":"passed","title":"should have valid CSS units for spacing if present","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Theme Validation"],"fullName":" Themes Theme Validation should have valid CSS units for radius if present","status":"passed","title":"should have valid CSS units for radius if present","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","Accessibility Considerations"],"fullName":" Themes Accessibility Considerations should have sufficient contrast between text and background","status":"passed","title":"should have sufficient contrast between text and background","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Accessibility Considerations"],"fullName":" Themes Accessibility Considerations should not rely only on color for information","status":"passed","title":"should not rely only on color for information","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Custom Theme Creation"],"fullName":" Themes Custom Theme Creation should be possible to extend default theme","status":"passed","title":"should be possible to extend default theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","Custom Theme Creation"],"fullName":" Themes Custom Theme Creation should be possible to extend dark theme","status":"passed","title":"should be possible to extend dark theme","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","Custom Theme Creation"],"fullName":" Themes Custom Theme Creation should be possible to create completely custom theme","status":"passed","title":"should be possible to create completely custom theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should create custom theme based on default theme","status":"passed","title":"should create custom theme based on default theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should create custom theme based on dark theme when name contains dark","status":"passed","title":"should create custom theme based on dark theme when name contains dark","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should merge all theme properties","status":"passed","title":"should merge all theme properties","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should handle empty overrides","status":"passed","title":"should handle empty overrides","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should handle overrides with undefined values","status":"passed","title":"should handle overrides with undefined values","duration":1,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should handle new signature with base name and mode","status":"passed","title":"should handle new signature with base name and mode","duration":0,"failureMessages":[]},{"ancestorTitles":["","Themes","createCustomTheme"],"fullName":" Themes createCustomTheme should support backward compatibility for dark theme name","status":"passed","title":"should support backward compatibility for dark theme name","duration":0,"failureMessages":[]}],"startTime":1753824900930,"endTime":1753824900941,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/themes.test.ts"},{"assertionResults":[{"ancestorTitles":["","TableOfContents","Constructor"],"fullName":" TableOfContents Constructor should initialize with default options","status":"passed","title":"should initialize with default options","duration":2,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Constructor"],"fullName":" TableOfContents Constructor should initialize with custom options","status":"passed","title":"should initialize with custom options","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Constructor"],"fullName":" TableOfContents Constructor should merge custom options with defaults","status":"passed","title":"should merge custom options with defaults","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should return empty array when disabled","status":"passed","title":"should return empty array when disabled","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should generate TOC from markdown tokens","status":"passed","title":"should generate TOC from markdown tokens","duration":2,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should respect maxDepth option","status":"passed","title":"should respect maxDepth option","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should handle empty content","status":"passed","title":"should handle empty content","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should handle content with no headings","status":"passed","title":"should handle content with no headings","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should fallback to manual parsing when lexer fails","status":"passed","title":"should fallback to manual parsing when lexer fails","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should handle manual parsing with various heading formats","status":"passed","title":"should handle manual parsing with various heading formats","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generate"],"fullName":" TableOfContents generate should generate unique IDs for headings","status":"passed","title":"should generate unique IDs for headings","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render TOC HTML","status":"passed","title":"should render TOC HTML","duration":2,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render with custom position","status":"passed","title":"should render with custom position","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render sticky TOC","status":"passed","title":"should render sticky TOC","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render collapsible TOC","status":"passed","title":"should render collapsible TOC","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should handle empty TOC items","status":"passed","title":"should handle empty TOC items","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","render"],"fullName":" TableOfContents render should render collapsible classes","status":"passed","title":"should render collapsible classes","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","initScrollSpy"],"fullName":" TableOfContents initScrollSpy should init scroll spy when enabled","status":"passed","title":"should init scroll spy when enabled","duration":10,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","initScrollSpy"],"fullName":" TableOfContents initScrollSpy should not init scroll spy when disabled","status":"passed","title":"should not init scroll spy when disabled","duration":22,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","initScrollSpy"],"fullName":" TableOfContents initScrollSpy should handle container without headings","status":"passed","title":"should handle container without headings","duration":3,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","destroy"],"fullName":" TableOfContents destroy should handle destroy","status":"passed","title":"should handle destroy","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","destroy"],"fullName":" TableOfContents destroy should handle destroy without setup","status":"passed","title":"should handle destroy without setup","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","getStyles"],"fullName":" TableOfContents getStyles should return CSS styles","status":"passed","title":"should return CSS styles","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId through generate method"],"fullName":" TableOfContents generateId through generate method should generate slug from text","status":"passed","title":"should generate slug from text","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId through generate method"],"fullName":" TableOfContents generateId through generate method should handle special characters","status":"passed","title":"should handle special characters","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId through generate method"],"fullName":" TableOfContents generateId through generate method should handle empty text","status":"passed","title":"should handle empty text","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","generateId through generate method"],"fullName":" TableOfContents generateId through generate method should handle duplicate IDs","status":"passed","title":"should handle duplicate IDs","duration":7,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Edge cases"],"fullName":" TableOfContents Edge cases should handle deeply nested headings","status":"passed","title":"should handle deeply nested headings","duration":1,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Edge cases"],"fullName":" TableOfContents Edge cases should handle headings starting at level 2","status":"passed","title":"should handle headings starting at level 2","duration":0,"failureMessages":[]},{"ancestorTitles":["","TableOfContents","Edge cases"],"fullName":" TableOfContents Edge cases should handle non-sequential heading levels","status":"passed","title":"should handle non-sequential heading levels","duration":0,"failureMessages":[]}],"startTime":1753824900866,"endTime":1753824900926,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/toc.test.ts"},{"assertionResults":[{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should escape HTML special characters","status":"passed","title":"should escape HTML special characters","duration":2,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should escape ampersands","status":"passed","title":"should escape ampersands","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should escape quotes","status":"passed","title":"should escape quotes","duration":2,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should handle null and undefined values","status":"passed","title":"should handle null and undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should handle numbers","status":"passed","title":"should handle numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should handle empty strings","status":"passed","title":"should handle empty strings","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtml"],"fullName":" HTML Security Utilities escapeHtml should not modify safe text","status":"passed","title":"should not modify safe text","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtmlAttribute"],"fullName":" HTML Security Utilities escapeHtmlAttribute should escape HTML attribute special characters","status":"passed","title":"should escape HTML attribute special characters","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtmlAttribute"],"fullName":" HTML Security Utilities escapeHtmlAttribute should escape newlines and tabs","status":"passed","title":"should escape newlines and tabs","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtmlAttribute"],"fullName":" HTML Security Utilities escapeHtmlAttribute should handle null and undefined values","status":"passed","title":"should handle null and undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","escapeHtmlAttribute"],"fullName":" HTML Security Utilities escapeHtmlAttribute should handle numbers","status":"passed","title":"should handle numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should allow valid hex colors","status":"passed","title":"should allow valid hex colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should allow valid rgb/rgba colors","status":"passed","title":"should allow valid rgb/rgba colors","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should allow valid hsl/hsla colors","status":"passed","title":"should allow valid hsl/hsla colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should allow named colors","status":"passed","title":"should allow named colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should reject invalid colors","status":"passed","title":"should reject invalid colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should handle null and undefined values","status":"passed","title":"should handle null and undefined values","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssColor"],"fullName":" HTML Security Utilities sanitizeCssColor should trim whitespace","status":"passed","title":"should trim whitespace","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeFontFamily"],"fullName":" HTML Security Utilities sanitizeFontFamily should allow valid font families","status":"passed","title":"should allow valid font families","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeFontFamily"],"fullName":" HTML Security Utilities sanitizeFontFamily should allow font names with hyphens","status":"passed","title":"should allow font names with hyphens","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeFontFamily"],"fullName":" HTML Security Utilities sanitizeFontFamily should reject fonts with suspicious content","status":"passed","title":"should reject fonts with suspicious content","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeFontFamily"],"fullName":" HTML Security Utilities sanitizeFontFamily should reject overly long font names","status":"passed","title":"should reject overly long font names","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeFontFamily"],"fullName":" HTML Security Utilities sanitizeFontFamily should handle null and undefined values","status":"passed","title":"should handle null and undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeFontFamily"],"fullName":" HTML Security Utilities sanitizeFontFamily should trim whitespace","status":"passed","title":"should trim whitespace","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should allow valid pixel values","status":"passed","title":"should allow valid pixel values","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should allow valid rem/em values","status":"passed","title":"should allow valid rem/em values","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should allow percentages","status":"passed","title":"should allow percentages","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should allow viewport units","status":"passed","title":"should allow viewport units","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should allow unitless numbers","status":"passed","title":"should allow unitless numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should reject invalid values","status":"passed","title":"should reject invalid values","duration":1,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should reject overly long values","status":"passed","title":"should reject overly long values","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should handle null and undefined values","status":"passed","title":"should handle null and undefined values","duration":0,"failureMessages":[]},{"ancestorTitles":["","HTML Security Utilities","sanitizeCssValue"],"fullName":" HTML Security Utilities sanitizeCssValue should trim whitespace","status":"passed","title":"should trim whitespace","duration":0,"failureMessages":[]},{"ancestorTitles":["","XSS Prevention Integration"],"fullName":" XSS Prevention Integration should prevent theme name XSS injection","status":"passed","title":"should prevent theme name XSS injection","duration":1,"failureMessages":[]},{"ancestorTitles":["","XSS Prevention Integration"],"fullName":" XSS Prevention Integration should prevent CSS injection in colors","status":"passed","title":"should prevent CSS injection in colors","duration":0,"failureMessages":[]},{"ancestorTitles":["","XSS Prevention Integration"],"fullName":" XSS Prevention Integration should prevent CSS injection in fonts","status":"passed","title":"should prevent CSS injection in fonts","duration":0,"failureMessages":[]},{"ancestorTitles":["","XSS Prevention Integration"],"fullName":" XSS Prevention Integration should prevent CSS injection in spacing values","status":"passed","title":"should prevent CSS injection in spacing values","duration":0,"failureMessages":[]}],"startTime":1753824901488,"endTime":1753824901502,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/utils.test.ts"},{"assertionResults":[{"ancestorTitles":["","MarkdownDocsViewer","Constructor"],"fullName":" MarkdownDocsViewer Constructor should create a viewer instance with valid config","status":"passed","title":"should create a viewer instance with valid config","duration":3,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Constructor"],"fullName":" MarkdownDocsViewer Constructor should throw error when container not found","status":"passed","title":"should throw error when container not found","duration":9,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Constructor"],"fullName":" MarkdownDocsViewer Constructor should apply default configuration","status":"passed","title":"should apply default configuration","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Management"],"fullName":" MarkdownDocsViewer Theme Management should set theme correctly","status":"passed","title":"should set theme correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Management"],"fullName":" MarkdownDocsViewer Theme Management should apply theme styles to document head","status":"passed","title":"should apply theme styles to document head","duration":4,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should load documents from local source","status":"passed","title":"should load documents from local source","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should get document by id","status":"passed","title":"should get document by id","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should return null for non-existent document","status":"passed","title":"should return null for non-existent document","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should get all documents","status":"passed","title":"should get all documents","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should load specific document","status":"passed","title":"should load specific document","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Management"],"fullName":" MarkdownDocsViewer Document Management should handle loading non-existent document","status":"passed","title":"should handle loading non-existent document","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should search by title","status":"passed","title":"should search by title","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should search by content","status":"passed","title":"should search by content","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should search by tags","status":"passed","title":"should search by tags","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should return empty results for no matches","status":"passed","title":"should return empty results for no matches","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Functionality"],"fullName":" MarkdownDocsViewer Search Functionality should be case insensitive","status":"passed","title":"should be case insensitive","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should handle missing container","status":"passed","title":"should handle missing container","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should handle missing source","status":"passed","title":"should handle missing source","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should apply navigation defaults","status":"passed","title":"should apply navigation defaults","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should apply search defaults","status":"passed","title":"should apply search defaults","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Configuration Validation"],"fullName":" MarkdownDocsViewer Configuration Validation should apply render defaults","status":"passed","title":"should apply render defaults","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State Management"],"fullName":" MarkdownDocsViewer State Management should have initial state","status":"passed","title":"should have initial state","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State Management"],"fullName":" MarkdownDocsViewer State Management should update state when loading document","status":"passed","title":"should update state when loading document","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State Management"],"fullName":" MarkdownDocsViewer State Management should handle errors in state","status":"passed","title":"should handle errors in state","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Cleanup"],"fullName":" MarkdownDocsViewer Cleanup should clean up resources on destroy","status":"passed","title":"should clean up resources on destroy","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Event Handling"],"fullName":" MarkdownDocsViewer Event Handling should call onDocumentLoad callback","status":"passed","title":"should call onDocumentLoad callback","duration":2,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Event Handling"],"fullName":" MarkdownDocsViewer Event Handling should call onError callback on errors","status":"passed","title":"should call onError callback on errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Methods"],"fullName":" MarkdownDocsViewer Theme Methods should get current theme","status":"passed","title":"should get current theme","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Methods"],"fullName":" MarkdownDocsViewer Theme Methods should get theme styles","status":"passed","title":"should get theme styles","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Methods"],"fullName":" MarkdownDocsViewer Theme Methods should get available themes","status":"passed","title":"should get available themes","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Methods"],"fullName":" MarkdownDocsViewer Theme Methods should register custom themes","status":"passed","title":"should register custom themes","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Methods"],"fullName":" MarkdownDocsViewer Theme Methods should create custom themes with overrides","status":"passed","title":"should create custom themes with overrides","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Methods"],"fullName":" MarkdownDocsViewer Document Methods should get all documents","status":"passed","title":"should get all documents","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Methods"],"fullName":" MarkdownDocsViewer Document Methods should get documents (alias method)","status":"passed","title":"should get documents (alias method)","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Methods"],"fullName":" MarkdownDocsViewer Document Methods should get document content","status":"passed","title":"should get document content","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Document Methods"],"fullName":" MarkdownDocsViewer Document Methods should handle document content loading error","status":"passed","title":"should handle document content loading error","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Methods"],"fullName":" MarkdownDocsViewer Search Methods should perform search","status":"passed","title":"should perform search","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Search Methods"],"fullName":" MarkdownDocsViewer Search Methods should handle search errors gracefully","status":"passed","title":"should handle search errors gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State and Config Methods"],"fullName":" MarkdownDocsViewer State and Config Methods should get current state","status":"passed","title":"should get current state","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","State and Config Methods"],"fullName":" MarkdownDocsViewer State and Config Methods should get current config","status":"passed","title":"should get current config","duration":5,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Error Handling"],"fullName":" MarkdownDocsViewer Error Handling should handle dependency validation errors","status":"passed","title":"should handle dependency validation errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Error Handling"],"fullName":" MarkdownDocsViewer Error Handling should handle container validation with string selector","status":"passed","title":"should handle container validation with string selector","duration":2,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Error Handling"],"fullName":" MarkdownDocsViewer Error Handling should handle container validation with missing selector","status":"passed","title":"should handle container validation with missing selector","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Error Handling"],"fullName":" MarkdownDocsViewer Error Handling should handle marked configuration errors gracefully","status":"passed","title":"should handle marked configuration errors gracefully","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Navigation State Management"],"fullName":" MarkdownDocsViewer Navigation State Management should save and restore navigation state","status":"passed","title":"should save and restore navigation state","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Integration"],"fullName":" MarkdownDocsViewer Theme Integration should handle theme change events","status":"passed","title":"should handle theme change events","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Integration"],"fullName":" MarkdownDocsViewer Theme Integration should handle theme string parameter","status":"passed","title":"should handle theme string parameter","duration":2,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Theme Integration"],"fullName":" MarkdownDocsViewer Theme Integration should handle invalid theme string gracefully","status":"passed","title":"should handle invalid theme string gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should render markdown content","status":"passed","title":"should render markdown content","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should handle markdown rendering errors","status":"passed","title":"should handle markdown rendering errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should render error states","status":"passed","title":"should render error states","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should render header with theme switcher and dark mode toggle","status":"passed","title":"should render header with theme switcher and dark mode toggle","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should render sidebar content","status":"passed","title":"should render sidebar content","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should render main content area","status":"passed","title":"should render main content area","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Content Rendering"],"fullName":" MarkdownDocsViewer Content Rendering should render footer","status":"passed","title":"should render footer","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Navigation State Management"],"fullName":" MarkdownDocsViewer Navigation State Management should save and restore navigation state","status":"passed","title":"should save and restore navigation state","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Navigation State Management"],"fullName":" MarkdownDocsViewer Navigation State Management should save desktop sidebar state","status":"passed","title":"should save desktop sidebar state","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Navigation State Management"],"fullName":" MarkdownDocsViewer Navigation State Management should restore navigation state for categories","status":"passed","title":"should restore navigation state for categories","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Navigation State Management"],"fullName":" MarkdownDocsViewer Navigation State Management should handle category toggling","status":"passed","title":"should handle category toggling","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should setup mobile interactions","status":"passed","title":"should setup mobile interactions","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should setup sidebar backdrop","status":"passed","title":"should setup sidebar backdrop","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should setup swipe gestures","status":"passed","title":"should setup swipe gestures","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should setup touch optimizations","status":"passed","title":"should setup touch optimizations","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should setup responsive handlers","status":"passed","title":"should setup responsive handlers","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should update responsive UI","status":"passed","title":"should update responsive UI","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should update sidebar state","status":"passed","title":"should update sidebar state","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Mobile and Responsive Features"],"fullName":" MarkdownDocsViewer Mobile and Responsive Features should update desktop sidebar","status":"passed","title":"should update desktop sidebar","duration":11,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Keyboard Navigation"],"fullName":" MarkdownDocsViewer Keyboard Navigation should handle navigation keydown events","status":"passed","title":"should handle navigation keydown events","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Keyboard Navigation"],"fullName":" MarkdownDocsViewer Keyboard Navigation should handle category keydown events","status":"passed","title":"should handle category keydown events","duration":14,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Keyboard Navigation"],"fullName":" MarkdownDocsViewer Keyboard Navigation should announce navigation changes","status":"passed","title":"should announce navigation changes","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should refresh the viewer","status":"passed","title":"should refresh the viewer","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should handle search queries","status":"passed","title":"should handle search queries","duration":2,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should handle errors with error handler","status":"passed","title":"should handle errors with error handler","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should configure marked parser","status":"passed","title":"should configure marked parser","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should attach event listeners","status":"passed","title":"should attach event listeners","duration":1,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should validate dependencies","status":"passed","title":"should validate dependencies","duration":0,"failureMessages":[]},{"ancestorTitles":["","MarkdownDocsViewer","Additional Methods"],"fullName":" MarkdownDocsViewer Additional Methods should save navigation state for categories","status":"passed","title":"should save navigation state for categories","duration":0,"failureMessages":[]}],"startTime":1753824900238,"endTime":1753824900353,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/viewer.test.ts"},{"assertionResults":[{"ancestorTitles":["","Zero Config Basic Coverage"],"fullName":" Zero Config Basic Coverage should import zero-config functions","status":"passed","title":"should import zero-config functions","duration":88,"failureMessages":[]},{"ancestorTitles":["","Zero Config Basic Coverage"],"fullName":" Zero Config Basic Coverage should call getAvailableThemes","status":"passed","title":"should call getAvailableThemes","duration":1,"failureMessages":[]},{"ancestorTitles":["","Zero Config Basic Coverage"],"fullName":" Zero Config Basic Coverage should call getViewer when no viewer exists","status":"passed","title":"should call getViewer when no viewer exists","duration":0,"failureMessages":[]},{"ancestorTitles":["","Zero Config Basic Coverage"],"fullName":" Zero Config Basic Coverage should warn when setting theme without viewer","status":"passed","title":"should warn when setting theme without viewer","duration":1,"failureMessages":[]}],"startTime":1753824901603,"endTime":1753824901693,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/zero-config-basic.test.ts"},{"assertionResults":[{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Static Functions"],"fullName":" Zero Config API - Comprehensive Coverage Static Functions should test getAvailableThemes function","status":"passed","title":"should test getAvailableThemes function","duration":161,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Static Functions"],"fullName":" Zero Config API - Comprehensive Coverage Static Functions should test generateConfig function","status":"passed","title":"should test generateConfig function","duration":9,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Static Functions"],"fullName":" Zero Config API - Comprehensive Coverage Static Functions should test getViewer when no viewer exists","status":"passed","title":"should test getViewer when no viewer exists","duration":10,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Static Functions"],"fullName":" Zero Config API - Comprehensive Coverage Static Functions should test setTheme without viewer","status":"passed","title":"should test setTheme without viewer","duration":7,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Static Functions"],"fullName":" Zero Config API - Comprehensive Coverage Static Functions should test setTheme with invalid theme name","status":"passed","title":"should test setTheme with invalid theme name","duration":7,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Static Functions"],"fullName":" Zero Config API - Comprehensive Coverage Static Functions should test reload without existing viewer","status":"passed","title":"should test reload without existing viewer","duration":3,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","onDOMReady function"],"fullName":" Zero Config API - Comprehensive Coverage onDOMReady function should handle DOM ready state when loading","status":"passed","title":"should handle DOM ready state when loading","duration":3,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","onDOMReady function"],"fullName":" Zero Config API - Comprehensive Coverage onDOMReady function should handle DOM ready state when complete","status":"passed","title":"should handle DOM ready state when complete","duration":6,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Theme utilities"],"fullName":" Zero Config API - Comprehensive Coverage Theme utilities should test theme name parsing in setTheme","status":"passed","title":"should test theme name parsing in setTheme","duration":4,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Theme utilities"],"fullName":" Zero Config API - Comprehensive Coverage Theme utilities should handle theme name splitting correctly","status":"passed","title":"should handle theme name splitting correctly","duration":6,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Container detection logic"],"fullName":" Zero Config API - Comprehensive Coverage Container detection logic should test container auto-detection fallbacks","status":"passed","title":"should test container auto-detection fallbacks","duration":0,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Container detection logic"],"fullName":" Zero Config API - Comprehensive Coverage Container detection logic should test container detection with .docs class","status":"passed","title":"should test container detection with .docs class","duration":5,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Container detection logic"],"fullName":" Zero Config API - Comprehensive Coverage Container detection logic should test container detection with .documentation class","status":"passed","title":"should test container detection with .documentation class","duration":1,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Container detection logic"],"fullName":" Zero Config API - Comprehensive Coverage Container detection logic should fallback to body when no standard containers found","status":"passed","title":"should fallback to body when no standard containers found","duration":1,"failureMessages":[]},{"ancestorTitles":["","Zero Config API - Comprehensive Coverage","Export object"],"fullName":" Zero Config API - Comprehensive Coverage Export object should test default export object","status":"passed","title":"should test default export object","duration":7,"failureMessages":[]}],"startTime":1753824901473,"endTime":1753824901705,"status":"passed","message":"","name":"/Users/austinorphan/Library/Mobile Documents/com~apple~CloudDocs/src/markdown-docs-viewer/tests/zero-config-comprehensive.test.ts"}]}
